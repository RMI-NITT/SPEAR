this["newtonTemplates"] = this["newtonTemplates"] || {};

Handlebars.registerPartial("cancelDialogHeader", Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<div class=\"ns-dialog-header\" role=\"dialog\" data-backdrop=\"false\">\n  <div class=\"ns-drag-area\">\n    <span class=\"ns-dialog-title\">";
  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</span>\n  </div>\n  <div class=\"ns-dialog-button-cancel backbone-cancel\"></div>\n</div>";
  return buffer;
  }));

Handlebars.registerPartial("closeDialogHeader", Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, self=this, functionType="function", escapeExpression=this.escapeExpression;

function program1(depth0,data) {
  
  
  return "has-regen-error";
  }

  buffer += "<div class=\"ns-dialog-header\" role=\"dialog\" data-backdrop=\"false\">\n  <div class=\"ns-drag-area\">\n    <span class=\"ns-dialog-title ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showRegenError), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\" data-placement=\"right\">";
  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</span>\n  </div>\n  <button type=\"button\" class=\"close ns-dialog-button-close\">&times;</button>\n</div>\n";
  return buffer;
  }));

Handlebars.registerPartial("featureDialogHeader", Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, self=this, functionType="function", escapeExpression=this.escapeExpression;

function program1(depth0,data) {
  
  
  return "has-regen-error";
  }

function program3(depth0,data) {
  
  
  return " disabled";
  }

  buffer += "<div class=\"ns-dialog-header\" role=\"dialog\" data-backdrop=\"false\">\n  <div class=\"ns-drag-area\" >\n    <div class=\"ns-dialog-title-container\">\n      <span class=\"ns-dialog-title ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showRegenError), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\" data-placement=\"right\">\n      "
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.displayName)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\n      </span>\n    </div>\n    <input maxlength=";
  if (helper = helpers.maxLength) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.maxLength); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + " class=\"os-feature-rename-textbox ns-dialog-default-hidden ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showRegenError), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\" />\n    <div class=\"os-dialog-button-edit-name ns-dialog-default-hidden\"><span class=\"glyphicons pencil\"><i></i></span></div>\n    <div class=\"ns-dialog-edit-hover-area\"></div>\n  </div>\n  <div class=\"ns-dialog-button-ok button-ok";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isOkButtonInitiallyDisabled), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\"></div>\n  <div class=\"ns-dialog-button-cancel backbone-cancel\"></div>\n</div>\n";
  return buffer;
  }));

Handlebars.registerPartial("okCancelDialogHeader", Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<div class=\"ns-dialog-header\" role=\"dialog\" data-backdrop=\"false\">\n  <div class=\"ns-drag-area\">\n    <span class=\"ns-dialog-title\" data-placement=\"right\">";
  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</span>\n  </div>\n  <div class=\"ns-dialog-button-ok button-ok\"></div>\n  <div class=\"ns-dialog-button-cancel backbone-cancel\"></div>\n</div>\n";
  return buffer;
  }));

Handlebars.registerPartial("parameterList", Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<div class=\"ns-dialog-fixed-content\">\n    <ul class=\"ns-parameter-list\">\n    </ul>\n</div>\n";
  }));

this["newtonTemplates"]["appearanceConstantsEditor"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<div id=\"appearance-editor-menu-bar\">\n  <li class=\"dropdown dropdown-bs\">\n  </li>\n  <button class=\"appearance-refresh-button dropdown-bs btn  btn-default btn-primary\">Save and Refresh</button>\n  <button class=\"appearance-cancel-button dropdown-bs btn btn-primary\">Cancel</button>\n  <button class=\"appearance-reset-button dropdown-bs btn btn-primary\">Reset to Defaults</button>\n  <button class=\"appearance-refresh-highlights-button dropdown-bs btn btn-primary\" style=\"float:right;\">Refresh highlights</button>\n</div>\n";
  });

this["newtonTemplates"]["assembly/dragHelper"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this, functionType="function";

function program1(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n          "
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{
    'numItems': ((depth0 && depth0.numberItems))
  },data:data},helper ? helper.call(depth0, "__numItems__ Instances", options) : helperMissing.call(depth0, "i18next", "__numItems__ Instances", options)))
    + "\n        ";
  return buffer;
  }

function program3(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n          ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isFeatures), {hash:{},inverse:self.program(6, program6, data),fn:self.program(4, program4, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n        ";
  return buffer;
  }
function program4(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n            "
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{
    'numItems': ((depth0 && depth0.numberItems))
  },data:data},helper ? helper.call(depth0, "__numItems__ Mates", options) : helperMissing.call(depth0, "i18next", "__numItems__ Mates", options)))
    + "\n          ";
  return buffer;
  }

function program6(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n            "
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{
    'numItems': ((depth0 && depth0.numberItems))
  },data:data},helper ? helper.call(depth0, "__numItems__ Items", options) : helperMissing.call(depth0, "i18next", "__numItems__ Items", options)))
    + "\n          ";
  return buffer;
  }

  buffer += "<li class=\"ns-list-item\">\n  <div class=\"ns-assembly-part-list-item list-item\">\n    <div>\n      <div class=\"item-label\" data-id=\"";
  if (helper = helpers.occurrencePath) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.occurrencePath); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" data-original-title=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.name)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" data-placement=\"right\"><div class=\"os-list-item-label\">\n        ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isInstances), {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n        </div>\n      </div>\n    </div>\n  </div>\n</li>\n";
  return buffer;
  });

this["newtonTemplates"]["assembly/matedofchooser"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, self=this;


  stack1 = self.invokePartial(partials.cancelDialogHeader, 'cancelDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n<div class=\"ns-dialog-fixed-content\">\n    <div class=\"selection-list\">\n      <div class=\"selection-list-scroller\">\n        <ul class=\"bti-ul-class mate-dof-list\"></ul>\n      </div>\n    </div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["assembly/matedofentry"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<li class=\"selection-list-entry\"><span class=\"mate-dof-name\" data-id=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.dofType)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.name)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</span></li>\n";
  return buffer;
  });

this["newtonTemplates"]["contextwarning"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<p class=\"context-loss-warning\">\n  "
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Onshape's WebGL rendering context has been lost. <a href=\"#\" onclick=\"window.location.reload(); return false;\">Refresh the browser to continue working on this document.</a> If the issue persists, visit <a href=\"/help/Content/webgl.htm\" target=\"_blank\">the Graphics Performance help section</a> for more information on WebGL troubleshooting.", options) : helperMissing.call(depth0, "i18next", "Onshape's WebGL rendering context has been lost. <a href=\"#\" onclick=\"window.location.reload(); return false;\">Refresh the browser to continue working on this document.</a> If the issue persists, visit <a href=\"/help/Content/webgl.htm\" target=\"_blank\">the Graphics Performance help section</a> for more information on WebGL troubleshooting.", options)))
    + "\n</p>\n";
  return buffer;
  });

this["newtonTemplates"]["debugpanel"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this, blockHelperMissing=helpers.blockHelperMissing;

function program1(depth0,data) {
  
  
  return "\n  <div class=\"debug-section-title\" data-section=\".debug-log-messages-frame\">Logs</div>\n  <div class=\"debug-log-messages-frame\">\n    <div class=\"debug-section debug-log-messages\"><ul></ul></div>\n    <div>\n      <span class=\"debug-control debug-clear-log\">Clear logs</span>\n    </div>\n  </div>\n  <div class=\"debug-section-title\" data-section=\".debug-timers\">Timers</div>\n  <div class=\"debug-timers\">\n    <input type=\"checkbox\" id=\"debug-timers-enabled\"> </input> <label for=\"debug-timers-enabled\">Enable Timers</label>\n    </div>\n  <div class=\"debug-slowdown\">\n    <button class=\"debug-wait\">Wait</button>\n  </div>\n";
  }

  buffer += "<div class=\"debug-hostname\">Modeling Server: <span class=\"debug-hostname\">";
  if (helper = helpers.hostname) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.hostname); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</span></div>\n<div class=\"debug-document-region\">Document region: <span class=\"debug-document-region\">";
  if (helper = helpers.documentRegion) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.documentRegion); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</span></div>\n<div class=\"debug-document-id\">DocId: <span class=\"debug-document-id\">";
  if (helper = helpers.documentId) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.documentId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</span></div>\n<div class=\"debug-document-elementId\">ElementId: <span class=\"debug-document-elementId\">";
  if (helper = helpers.elementId) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.elementId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</span></div>\n<div class=\"debug-userid\">UserId: <span class=\"debug-userid\">";
  if (helper = helpers.userId) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.userId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</span></div>\n<div class=\"debug-ping debug-panel-output\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Ping time:", options) : helperMissing.call(depth0, "i18next", "Ping time:", options)))
    + " <span class=\"debug-ping\">";
  if (helper = helpers.pingTime) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.pingTime); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</span>ms<div>\n<div class=\"debug-fps debug-panel-output\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Interactive framerate:", options) : helperMissing.call(depth0, "i18next", "Interactive framerate:", options)))
    + " <span class=\"debug-interactive-fps\">";
  if (helper = helpers.interactiveFramerate) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.interactiveFramerate); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</span> fps</div>\n<div class=\"debug-fps debug-panel-output\" style=\"display:none;\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Queried framerate:", options) : helperMissing.call(depth0, "i18next", "Queried framerate:", options)))
    + " <span class=\"debug-interactive-query-fps\">";
  if (helper = helpers.interactiveQueryFramerate) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.interactiveQueryFramerate); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</span> fps</div>\n  <div class=\"debug-section-title\" data-section=\".debug-model-stats-section\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Model Statistics", options) : helperMissing.call(depth0, "i18next", "Model Statistics", options)))
    + "</div>\n<div class=\"debug-model-stats-section\">\n  <div class=\"debug-model-stats debug-section\"></div>\n  <button class=\"update-model-stats\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Update model statistics", options) : helperMissing.call(depth0, "i18next", "Update model statistics", options)))
    + "</button>\n</div>\n<div class=\"debug-local-cache-section\">\n  <button class=\"clear-display-cache\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Clear local display cache", options) : helperMissing.call(depth0, "i18next", "Clear local display cache", options)))
    + "</button>\n</div>\n\n<div class=\"debug-section-title\" data-section=\".debug-counters\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Render Counters", options) : helperMissing.call(depth0, "i18next", "Render Counters", options)))
    + "</div>\n<div class=\"debug-counters debug-section\"></div>\n\n";
  options={hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data}
  if (helper = helpers.allowDeveloperDebugFeatures) { stack1 = helper.call(depth0, options); }
  else { helper = (depth0 && depth0.allowDeveloperDebugFeatures); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }
  if (!helpers.allowDeveloperDebugFeatures) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data}); }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer;
  });

this["newtonTemplates"]["dialogs/assembly"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<div class=\"ns-subdialog-content\">\n  <div class=\"ns-dialog-resizable\">\n  </div>\n</div>\n";
  });

this["newtonTemplates"]["dialogs/assemblyanimatematedialog"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<div class=\"feature-dialog-main\">\n  ";
  stack1 = self.invokePartial(partials.closeDialogHeader, 'closeDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  ";
  stack1 = self.invokePartial(partials.parameterList, 'parameterList', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  <div class=\"ns-custom-dialog-button-row\">\n    <svg class=\"os-param-icon-button ns-animation-play\"\n         data-original-title=\""
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "tooltips:::Play", options) : helperMissing.call(depth0, "i18next", "tooltips:::Play", options)))
    + "\"\n         data-placement=\"bottom\">\n      <use xlink:href=\"#svg-icon-play-dialog\"></use>\n    </svg>\n    <svg class=\"os-param-icon-button ns-animation-stop\"\n         data-original-title=\""
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "tooltips:::Stop", options) : helperMissing.call(depth0, "i18next", "tooltips:::Stop", options)))
    + "\"\n         data-placement=\"bottom\">\n      <use xlink:href=\"#svg-icon-stop-dialog\"></use>\n    </svg>\n  </div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/assemblyinsert"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  
  return " <use xlink:href=\"#svg-icon-undo-button\"></use> ";
  }

function program3(depth0,data) {
  
  var stack1, helper;
  if (helper = helpers.undoMessage) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.undoMessage); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  return escapeExpression(stack1);
  }

  buffer += "<div class=\"feature-dialog-wrapper assembly-insert-dialog-wrapper  select-item-container-inner\" role=\"dialog\" data-backdrop=\"false\">\n  ";
  stack1 = self.invokePartial(partials.okCancelDialogHeader, 'okCancelDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  <div class=\"assembly-select-item-dialog-widget-container\"></div>\n    <div class=\"os-dialog-info-panel\">\n      <span>\n        <svg class=\"os-svg-icon os-dialog-info-panel-svg\">\n          ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showUndo), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n        </svg>\n      </span>\n      ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showUndo), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n      <div class=\"help-button-container\"></div>\n    </div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/checkpart"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, self=this;


  stack1 = self.invokePartial(partials.okCancelDialogHeader, 'okCancelDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n<div class=\"ns-dialog-fixed-content\">\n  <ul class=\"ns-parameter-list\">\n    <li class=\"ns-param-wrapper\">\n      <div class=\"ns-feature-parameter\">\n        <label class=\"ns-parameter-label text-label\" for=\"maxFaults\">maxFaults:</label>\n        <input class=\"ns-number-text bti-numeric-text\"  type=\"text\" id=\"maxFaults\" value=1 size=\"5\"/>\n      </div>\n    </li>\n    <li class=\"ns-param-wrapper\">\n      <textarea id=\"checkpartdialogtextoutput\" disabled ></textarea>\n    </li>\n    <li class=\"ns-param-wrapper\"></li>\n  </ul>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/configurationsetup"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, self=this;


  buffer += "<div class=\"feature-dialog-wrapper\" role=\"dialog\" data-backdrop=\"false\">\n  ";
  stack1 = self.invokePartial(partials.okCancelDialogHeader, 'okCancelDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  <div class=\"ns-dialog-fixed-content\"></div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/configurefeaturedialog"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, self=this;


  buffer += "<div class=\"feature-dialog-main ns-dialog-frame\">\n  ";
  stack1 = self.invokePartial(partials.closeDialogHeader, 'closeDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  <div class=\"ns-dialog-fixed-content\">\n    <ul class=\"ns-parameter-list\">\n    </ul>\n  </div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/draftanalysislegend"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<button class=\"btn btn-default btn-small small-secondary-btn draft-analysis-edit-button\">\n  "
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Edit draft analysis…", options) : helperMissing.call(depth0, "i18next", "Edit draft analysis…", options)))
    + "\n</button>\n<div class=\"draft-analysis-key-entry\">\n  <div class=\"draft-analysis-key-color steep\"></div>\n  <div class=\"draft-analysis-key-name\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Steep", options) : helperMissing.call(depth0, "i18next", "Steep", options)))
    + "</div>\n</div>\n<div class=\"draft-analysis-key-entry\">\n  <div class=\"draft-analysis-key-color undercut\"></div>\n  <div class=\"draft-analysis-key-name\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Undercut", options) : helperMissing.call(depth0, "i18next", "Undercut", options)))
    + "</div>\n</div>\n<div class=\"draft-analysis-key-entry\">\n  <div class=\"draft-analysis-key-color side1\"></div>\n  <div class=\"draft-analysis-key-name\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Side 1", options) : helperMissing.call(depth0, "i18next", "Side 1", options)))
    + "</div>\n</div>\n<div class=\"draft-analysis-key-entry\">\n  <div class=\"draft-analysis-key-color side2\"></div>\n  <div class=\"draft-analysis-key-name\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Side 2", options) : helperMissing.call(depth0, "i18next", "Side 2", options)))
    + "</div>\n</div>";
  return buffer;
  });

this["newtonTemplates"]["dialogs/draftanalysisview"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, self=this;


  buffer += "<div class=\"feature-dialog-wrapper\">\n  ";
  stack1 = self.invokePartial(partials.okCancelDialogHeader, 'okCancelDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  <div class=\"ns-dialog-fixed-content\">\n    <ul class=\"ns-parameter-list\"/>\n  </div>\n  <div class=\"os-help-button-row\"></div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/edgecurvatureview"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<div class=\"feature-dialog-wrapper\">\n  ";
  stack1 = self.invokePartial(partials.closeDialogHeader, 'closeDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  <div class=\"edge-curvature-qlv-placeholder\"></div>\n  <ul class=\"ns-parameter-list\"></ul>\n  <div class=\"ns-edge-curvature-size-slider active\"\n       data-original-title=\""
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "tooltips:::Change size of curvature combs", options) : helperMissing.call(depth0, "i18next", "tooltips:::Change size of curvature combs", options)))
    + "\"\n       data-placement=\"bottom\">\n  </div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/elementoperationdialog"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, self=this;


  buffer += "<div class=\"feature-dialog-main ns-dialog-frame\">\n  ";
  stack1 = self.invokePartial(partials.okCancelDialogHeader, 'okCancelDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  ";
  stack1 = self.invokePartial(partials.parameterList, 'parameterList', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/exportselector"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, self=this;


  buffer += "<div class=\"feature-dialog-wrapper\">\n  ";
  stack1 = self.invokePartial(partials.okCancelDialogHeader, 'okCancelDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  <div class=\"ns-dialog-fixed-content\">\n    <ul class=\"ns-parameter-list\" />\n  </div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/externalreferenceupdate"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, helper, self=this, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<div class=\"feature-dialog-wrapper external-reference-update-dialog-wrapper\" role=\"dialog\" data-backdrop=\"false\">\n  ";
  stack1 = self.invokePartial(partials.closeDialogHeader, 'closeDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  <div class=\"external-reference-update-dialog-widget-container\"></div>\n  <div class=\"os-help-button-row\">\n    <a class=\"os-feature-dialog-context-help-btn\" href=\"/help";
  if (helper = helpers.helpLocale) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.helpLocale); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "/index.htm#cshid=linked_document_update\" target=\"help\"><svg class=\"os-svg-icon\"><use xlink:href=\"#svg-icon-help-button\"></use></svg></a>\n  </div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/fivePlusCollaborators"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<div class=\"ns-client-initial ns-client-overflow os-center-content\">";
  if (helper = helpers.numberOfClients) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.numberOfClients); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/fourCollaborators"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<div class=\"ns-client-initial\">\n  <div class=\"ns-client-half\">\n    <div class=\"ns-client-quarter\"></div><div class=\"ns-client-quarter\"></div>\n  </div>\n  <div class=\"ns-client-half\">\n    <div class=\"ns-client-quarter\"></div><div class=\"ns-client-quarter\"></div>\n  </div>\n</div>\n";
  });

this["newtonTemplates"]["dialogs/genericfeature"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n    ";
  stack1 = self.invokePartial(partials.featureDialogHeader, 'featureDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  ";
  return buffer;
  }

function program3(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n    ";
  stack1 = self.invokePartial(partials.closeDialogHeader, 'closeDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  ";
  return buffer;
  }

  buffer += "<div class=\"feature-dialog-main ns-dialog-frame\">\n  ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showCommitCancelButtons), {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  <div class=\"ns-dialog-fixed-content\">\n    <ul class=\"ns-parameter-list\">\n    </ul>\n    <div class=\"ns-preview-control\"></div>\n    <div class=\"clearfix\"></div>\n  </div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/incontextworkspace"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, helper, self=this, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<div class=\"feature-dialog-wrapper incontext-workspace-dialog-wrapper\" role=\"dialog\" data-backdrop=\"false\">\n  ";
  stack1 = self.invokePartial(partials.closeDialogHeader, 'closeDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  <div class=\"incontext-workspace-dialog-widget-container\"></div>\n  <div class=\"os-help-button-row\">\n    <a class=\"os-feature-dialog-context-help-btn\" href=\"/help";
  if (helper = helpers.helpLocale) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.helpLocale); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "/index.htm#cshid=incontext_workspace\" target=\"help\"><svg class=\"os-svg-icon\"><use xlink:href=\"#svg-icon-help-button\"></use></svg></a>\n  </div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/isolate"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, functionType="function", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

function program1(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n                            <option value=\"";
  if (helper = helpers.functionName) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.functionName); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\">";
  if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</option>\n                        ";
  return buffer;
  }

  buffer += "<div class=\"feature-dialog-wrapper isolate-dialog-wrapper\" role=\"dialog\" data-backdrop=\"false\">\n    <div class=\"ns-dialog-header\" role=\"dialog\" data-backdrop=\"false\">\n        <div class=\"ns-drag-area\">\n            <span class=\"ns-dialog-title\" data-placement=\"right\">";
  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</span>\n        </div>\n        <button type=\"button\" class=\"close ns-dialog-button-close-isolate-dialog\">&times;</button>\n    </div>\n    <div class=\"ns-dialog-fixed-content\">\n        <ul class=\"ns-parameter-list\">\n            <li class=\"ns-param-wrapper\">\n                <div class=\"ns-feature-parameter ns-select-control\">\n                    <select class=\"isolate-type\">\n                        ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.isolateFunctions), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n                    </select>\n                </div>\n            </li>\n            <li class=\"ns-param-wrapper\">\n                <div class=\"ns-isolate-connectivity-slider-container\">\n                    <div class=\"ns-isolate-slider active os-tooltip-bottom\"\n                         data-original-title=\""
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "tooltips:::Expand isolate by mate connectivity.", options) : helperMissing.call(depth0, "i18next", "tooltips:::Expand isolate by mate connectivity.", options)))
    + "\"\n                         data-placement=\"bottom\">\n                    </div>\n                </div>\n            </li>\n            <li class=\"ns-param-wrapper\">\n                <div class=\"ns-isolate-proximity-slider-container\">\n                    <div class=\"ns-isolate-slider active os-tooltip-bottom\"\n                         data-original-title=\""
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "tooltips:::Expand isolate by physical proximity.", options) : helperMissing.call(depth0, "i18next", "tooltips:::Expand isolate by physical proximity.", options)))
    + "\"\n                         data-placement=\"bottom\">\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </div>\n    <a class=\"os-isolate-dialog-context-help-btn\" href=\"/help";
  if (helper = helpers.helpLocale) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.helpLocale); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "/index.htm#managingassemblies.htm?Highlight=isolate\" target=\"help\"><svg class=\"os-svg-icon\"><use xlink:href=\"#svg-icon-help-button\"></use></svg></a>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/massproperties"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function";


  buffer += "<div class=\"feature-dialog-wrapper\">\n  ";
  stack1 = self.invokePartial(partials.closeDialogHeader, 'closeDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  <ul class=\"ns-parameter-list\"></ul>\n  <div class=\"calculating massproperties-details\">\n    <div class=\"calculating-label\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Calculating…", options) : helperMissing.call(depth0, "i18next", "Calculating…", options)))
    + "</div>\n  </div>\n  <div class=\"massproperties-mass-warning alert alert-info\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "One or more parts do not have a material defined", options) : helperMissing.call(depth0, "i18next", "One or more parts do not have a material defined", options)))
    + "</div>\n  <div class=\"ns-feature-parameter ns-boolean-value massproperties-show-variance\">\n    <input type=\"checkbox\" class=\"ns-parameter-checkbox has-mask\" id=\"show-variance-checkbox\">\n    <label class=\"os-checkbox\" for=\"show-variance-checkbox\" id=\"show-variance\"></label>\n    <label class=\"ns-parameter-label\" for=\"show-variance-checkbox\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Show calculation variance", options) : helperMissing.call(depth0, "i18next", "Show calculation variance", options)))
    + "</label>\n  </div>\n  <ul class=\"massproperties-details\">\n    <li>"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Mass:", options) : helperMissing.call(depth0, "i18next", "Mass:", options)))
    + "</li>\n    <ul>\n      <li>\n        <span class=\"massproperties-value\" data-measurementtype=\"mass\" data-displaystring=\"\">"
    + escapeExpression((helper = helpers.convertMassUnits || (depth0 && depth0.convertMassUnits),options={hash:{
    'hasValue': ((depth0 && depth0.hasMass)),
    'minimumValue': (((stack1 = (depth0 && depth0.massRange)),stack1 == null || stack1 === false ? stack1 : stack1[1])),
    'maximumValue': (((stack1 = (depth0 && depth0.massRange)),stack1 == null || stack1 === false ? stack1 : stack1[2]))
  },data:data},helper ? helper.call(depth0, (depth0 && depth0.mass), options) : helperMissing.call(depth0, "convertMassUnits", (depth0 && depth0.mass), options)))
    + "</span>\n      </li>\n    </ul>\n    <li>"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Volume:", options) : helperMissing.call(depth0, "i18next", "Volume:", options)))
    + "\n    </li>\n    <ul>\n      <li >\n        <span class=\"massproperties-value\" data-measurementtype=\"volume\" data-displaystring=\"\">\n          "
    + escapeExpression((helper = helpers.convertLengthUnits || (depth0 && depth0.convertLengthUnits),options={hash:{
    'power': (3),
    'hasValue': ((depth0 && depth0.volume)),
    'minimumValue': (((stack1 = (depth0 && depth0.volumeRange)),stack1 == null || stack1 === false ? stack1 : stack1[1]))
  },data:data},helper ? helper.call(depth0, (depth0 && depth0.volume), options) : helperMissing.call(depth0, "convertLengthUnits", (depth0 && depth0.volume), options)))
    + "\n        </span>\n      </li>\n    </ul>\n    <li>"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Surface area:", options) : helperMissing.call(depth0, "i18next", "Surface area:", options)))
    + "\n      <ul>\n        <li>\n          <span class=\"massproperties-value\" data-measurementtype=\"surfaceArea\" data-displaystring=\"\">\n            "
    + escapeExpression((helper = helpers.convertLengthUnits || (depth0 && depth0.convertLengthUnits),options={hash:{
    'power': (2),
    'hasValue': ((depth0 && depth0.surfaceArea)),
    'minimumValue': (((stack1 = (depth0 && depth0.surfaceAreaRange)),stack1 == null || stack1 === false ? stack1 : stack1[1]))
  },data:data},helper ? helper.call(depth0, (depth0 && depth0.surfaceArea), options) : helperMissing.call(depth0, "convertLengthUnits", (depth0 && depth0.surfaceArea), options)))
    + "\n          </span>\n        </li>\n      </ul>\n    </li>\n    <li>"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Center of mass:", options) : helperMissing.call(depth0, "i18next", "Center of mass:", options)))
    + "\n      <ul class=\"center-of-mass\">\n        <li>"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "X:", options) : helperMissing.call(depth0, "i18next", "X:", options)))
    + "\n          <span class=\"massproperties-value\" data-measurementtype=\"centerOfMass\" data-index=0 data-displaystring=\"\">\n            "
    + escapeExpression((helper = helpers.convertLengthUnits || (depth0 && depth0.convertLengthUnits),options={hash:{
    'minimumValue': (((stack1 = (depth0 && depth0.centerOfMassRange)),stack1 == null || stack1 === false ? stack1 : stack1[3])),
    'hasValue': ((depth0 && depth0.hasMass))
  },data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.centerOfMass)),stack1 == null || stack1 === false ? stack1 : stack1[0]), options) : helperMissing.call(depth0, "convertLengthUnits", ((stack1 = (depth0 && depth0.centerOfMass)),stack1 == null || stack1 === false ? stack1 : stack1[0]), options)))
    + "\n          </span>\n        </li>\n        <li>"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Y:", options) : helperMissing.call(depth0, "i18next", "Y:", options)))
    + "\n          <span class=\"massproperties-value\" data-measurementtype=\"centerOfMass\" data-index=1 data-displaystring=\"\">\n            "
    + escapeExpression((helper = helpers.convertLengthUnits || (depth0 && depth0.convertLengthUnits),options={hash:{
    'minimumValue': (((stack1 = (depth0 && depth0.centerOfMassRange)),stack1 == null || stack1 === false ? stack1 : stack1[4])),
    'hasValue': ((depth0 && depth0.hasMass))
  },data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.centerOfMass)),stack1 == null || stack1 === false ? stack1 : stack1[1]), options) : helperMissing.call(depth0, "convertLengthUnits", ((stack1 = (depth0 && depth0.centerOfMass)),stack1 == null || stack1 === false ? stack1 : stack1[1]), options)))
    + "\n          </span>\n        </li>\n        <li>"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Z:", options) : helperMissing.call(depth0, "i18next", "Z:", options)))
    + "\n          <span class=\"massproperties-value\" data-measurementtype=\"centerOfMass\" data-index=2 data-displaystring=\"\">\n            "
    + escapeExpression((helper = helpers.convertLengthUnits || (depth0 && depth0.convertLengthUnits),options={hash:{
    'minimumValue': (((stack1 = (depth0 && depth0.centerOfMassRange)),stack1 == null || stack1 === false ? stack1 : stack1[5])),
    'hasValue': ((depth0 && depth0.hasMass))
  },data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.centerOfMass)),stack1 == null || stack1 === false ? stack1 : stack1[2]), options) : helperMissing.call(depth0, "convertLengthUnits", ((stack1 = (depth0 && depth0.centerOfMass)),stack1 == null || stack1 === false ? stack1 : stack1[2]), options)))
    + "\n          </span>\n        </li>\n      </ul>\n    </li>\n    <li>"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Moments of inertia:", options) : helperMissing.call(depth0, "i18next", "Moments of inertia:", options)))
    + " ";
  if (helper = helpers.momentsUnitsString) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.momentsUnitsString); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "<sup>2</sup>\n      <!-- Moments of inertia does not display error, simply because the UX looks too crowded. -->\n      <table>\n        <tr>\n          <td>"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Lxx:", options) : helperMissing.call(depth0, "i18next", "Lxx:", options)))
    + " <span class=\"massproperties-value\" data-measurementtype=\"moi\" data-index=0 data-displaystring=\"\">"
    + escapeExpression((helper = helpers.convertMomentUnits || (depth0 && depth0.convertMomentUnits),options={hash:{
    'minimumValue': (((stack1 = (depth0 && depth0.momentsOfInertiaRange)),stack1 == null || stack1 === false ? stack1 : stack1[9])),
    'hideUnitsSuffix': (true),
    'useScientific': (true),
    'hasValue': ((depth0 && depth0.hasMass)),
    'accuracy': ((depth0 && depth0.moiAccuracy))
  },data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.momentsOfInertia)),stack1 == null || stack1 === false ? stack1 : stack1[0]), options) : helperMissing.call(depth0, "convertMomentUnits", ((stack1 = (depth0 && depth0.momentsOfInertia)),stack1 == null || stack1 === false ? stack1 : stack1[0]), options)))
    + "</span></td>\n          <td>"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Lxy:", options) : helperMissing.call(depth0, "i18next", "Lxy:", options)))
    + " <span class=\"massproperties-value\" data-measurementtype=\"moi\" data-index=3 data-displaystring=\"\">"
    + escapeExpression((helper = helpers.convertMomentUnits || (depth0 && depth0.convertMomentUnits),options={hash:{
    'minimumValue': (((stack1 = (depth0 && depth0.momentsOfInertiaRange)),stack1 == null || stack1 === false ? stack1 : stack1[12])),
    'hideUnitsSuffix': (true),
    'useScientific': (true),
    'hasValue': ((depth0 && depth0.hasMass)),
    'accuracy': ((depth0 && depth0.moiAccuracy))
  },data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.momentsOfInertia)),stack1 == null || stack1 === false ? stack1 : stack1[3]), options) : helperMissing.call(depth0, "convertMomentUnits", ((stack1 = (depth0 && depth0.momentsOfInertia)),stack1 == null || stack1 === false ? stack1 : stack1[3]), options)))
    + "</span></td>\n          <td>"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Lxz:", options) : helperMissing.call(depth0, "i18next", "Lxz:", options)))
    + " <span class=\"massproperties-value\" data-measurementtype=\"moi\" data-index=6 data-displaystring=\"\">"
    + escapeExpression((helper = helpers.convertMomentUnits || (depth0 && depth0.convertMomentUnits),options={hash:{
    'minimumValue': (((stack1 = (depth0 && depth0.momentsOfInertiaRange)),stack1 == null || stack1 === false ? stack1 : stack1[15])),
    'hideUnitsSuffix': (true),
    'useScientific': (true),
    'hasValue': ((depth0 && depth0.hasMass)),
    'accuracy': ((depth0 && depth0.moiAccuracy))
  },data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.momentsOfInertia)),stack1 == null || stack1 === false ? stack1 : stack1[6]), options) : helperMissing.call(depth0, "convertMomentUnits", ((stack1 = (depth0 && depth0.momentsOfInertia)),stack1 == null || stack1 === false ? stack1 : stack1[6]), options)))
    + "</span></td>\n        </tr>\n        <tr>\n          <td>"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Lyx:", options) : helperMissing.call(depth0, "i18next", "Lyx:", options)))
    + " <span class=\"massproperties-value\" data-measurementtype=\"moi\" data-index=1 data-displaystring=\"\">"
    + escapeExpression((helper = helpers.convertMomentUnits || (depth0 && depth0.convertMomentUnits),options={hash:{
    'minimumValue': (((stack1 = (depth0 && depth0.momentsOfInertiaRange)),stack1 == null || stack1 === false ? stack1 : stack1[10])),
    'hideUnitsSuffix': (true),
    'useScientific': (true),
    'hasValue': ((depth0 && depth0.hasMass)),
    'accuracy': ((depth0 && depth0.moiAccuracy))
  },data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.momentsOfInertia)),stack1 == null || stack1 === false ? stack1 : stack1[1]), options) : helperMissing.call(depth0, "convertMomentUnits", ((stack1 = (depth0 && depth0.momentsOfInertia)),stack1 == null || stack1 === false ? stack1 : stack1[1]), options)))
    + "</span></td>\n          <td>"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Lyy:", options) : helperMissing.call(depth0, "i18next", "Lyy:", options)))
    + " <span class=\"massproperties-value\" data-measurementtype=\"moi\" data-index=4 data-displaystring=\"\">"
    + escapeExpression((helper = helpers.convertMomentUnits || (depth0 && depth0.convertMomentUnits),options={hash:{
    'minimumValue': (((stack1 = (depth0 && depth0.momentsOfInertiaRange)),stack1 == null || stack1 === false ? stack1 : stack1[13])),
    'hideUnitsSuffix': (true),
    'useScientific': (true),
    'hasValue': ((depth0 && depth0.hasMass)),
    'accuracy': ((depth0 && depth0.moiAccuracy))
  },data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.momentsOfInertia)),stack1 == null || stack1 === false ? stack1 : stack1[4]), options) : helperMissing.call(depth0, "convertMomentUnits", ((stack1 = (depth0 && depth0.momentsOfInertia)),stack1 == null || stack1 === false ? stack1 : stack1[4]), options)))
    + "</span></td>\n          <td>"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Lyz:", options) : helperMissing.call(depth0, "i18next", "Lyz:", options)))
    + " <span class=\"massproperties-value\" data-measurementtype=\"moi\" data-index=7 data-displaystring=\"\">"
    + escapeExpression((helper = helpers.convertMomentUnits || (depth0 && depth0.convertMomentUnits),options={hash:{
    'minimumValue': (((stack1 = (depth0 && depth0.momentsOfInertiaRange)),stack1 == null || stack1 === false ? stack1 : stack1[16])),
    'hideUnitsSuffix': (true),
    'useScientific': (true),
    'hasValue': ((depth0 && depth0.hasMass)),
    'accuracy': ((depth0 && depth0.moiAccuracy))
  },data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.momentsOfInertia)),stack1 == null || stack1 === false ? stack1 : stack1[7]), options) : helperMissing.call(depth0, "convertMomentUnits", ((stack1 = (depth0 && depth0.momentsOfInertia)),stack1 == null || stack1 === false ? stack1 : stack1[7]), options)))
    + "</span></td>\n        </tr>\n        <tr>\n          <td>"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Lzx:", options) : helperMissing.call(depth0, "i18next", "Lzx:", options)))
    + " <span class=\"massproperties-value\" data-measurementtype=\"moi\" data-index=2 data-displaystring=\"\">"
    + escapeExpression((helper = helpers.convertMomentUnits || (depth0 && depth0.convertMomentUnits),options={hash:{
    'minimumValue': (((stack1 = (depth0 && depth0.momentsOfInertiaRange)),stack1 == null || stack1 === false ? stack1 : stack1[11])),
    'hideUnitsSuffix': (true),
    'useScientific': (true),
    'hasValue': ((depth0 && depth0.hasMass)),
    'accuracy': ((depth0 && depth0.moiAccuracy))
  },data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.momentsOfInertia)),stack1 == null || stack1 === false ? stack1 : stack1[2]), options) : helperMissing.call(depth0, "convertMomentUnits", ((stack1 = (depth0 && depth0.momentsOfInertia)),stack1 == null || stack1 === false ? stack1 : stack1[2]), options)))
    + "</span></td>\n          <td>"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Lzy:", options) : helperMissing.call(depth0, "i18next", "Lzy:", options)))
    + " <span class=\"massproperties-value\" data-measurementtype=\"moi\" data-index=5 data-displaystring=\"\">"
    + escapeExpression((helper = helpers.convertMomentUnits || (depth0 && depth0.convertMomentUnits),options={hash:{
    'minimumValue': (((stack1 = (depth0 && depth0.momentsOfInertiaRange)),stack1 == null || stack1 === false ? stack1 : stack1[14])),
    'hideUnitsSuffix': (true),
    'useScientific': (true),
    'hasValue': ((depth0 && depth0.hasMass)),
    'accuracy': ((depth0 && depth0.moiAccuracy))
  },data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.momentsOfInertia)),stack1 == null || stack1 === false ? stack1 : stack1[5]), options) : helperMissing.call(depth0, "convertMomentUnits", ((stack1 = (depth0 && depth0.momentsOfInertia)),stack1 == null || stack1 === false ? stack1 : stack1[5]), options)))
    + "</span></td>\n          <td>"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Lzz:", options) : helperMissing.call(depth0, "i18next", "Lzz:", options)))
    + " <span class=\"massproperties-value\" data-measurementtype=\"moi\" data-index=8 data-displaystring=\"\">"
    + escapeExpression((helper = helpers.convertMomentUnits || (depth0 && depth0.convertMomentUnits),options={hash:{
    'minimumValue': (((stack1 = (depth0 && depth0.momentsOfInertiaRange)),stack1 == null || stack1 === false ? stack1 : stack1[17])),
    'hideUnitsSuffix': (true),
    'useScientific': (true),
    'hasValue': ((depth0 && depth0.hasMass)),
    'accuracy': ((depth0 && depth0.moiAccuracy))
  },data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.momentsOfInertia)),stack1 == null || stack1 === false ? stack1 : stack1[8]), options) : helperMissing.call(depth0, "convertMomentUnits", ((stack1 = (depth0 && depth0.momentsOfInertia)),stack1 == null || stack1 === false ? stack1 : stack1[8]), options)))
    + "</span></td>\n        </tr>\n      </table>\n    </li>\n  </ul>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/mateconnectorfeature"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n    ";
  stack1 = self.invokePartial(partials.featureDialogHeader, 'featureDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  ";
  return buffer;
  }

function program3(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n    ";
  stack1 = self.invokePartial(partials.closeDialogHeader, 'closeDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  ";
  return buffer;
  }

  buffer += "<div class=\"feature-dialog-main ns-dialog-frame mate-feature-dialog\">\n  ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showCommitCancelButtons), {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  <div class=\"ns-dialog-fixed-content\">\n    <ul class=\"ns-parameter-list\"></ul>\n    <div class=\"ns-preview-control\"></div>\n  </div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/matefeature"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n    ";
  stack1 = self.invokePartial(partials.featureDialogHeader, 'featureDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  ";
  return buffer;
  }

function program3(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n    ";
  stack1 = self.invokePartial(partials.closeDialogHeader, 'closeDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  ";
  return buffer;
  }

  buffer += "<div class=\"feature-dialog-main ns-dialog-frame mate-feature-dialog\">\n  ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showCommitCancelButtons), {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  <div class=\"ns-dialog-fixed-content\">\n    <ul class=\"ns-parameter-list\"></ul>\n    <div class=\"ns-custom-dialog-button-row ns-custom-dialog-button-row-mate-feature\">\n      <svg class=\"os-param-icon-button ns-mate-play\"\n           data-original-title=\""
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "tooltips:::Animate mate degree of freedom", options) : helperMissing.call(depth0, "i18next", "tooltips:::Animate mate degree of freedom", options)))
    + "\"\n           data-placement=\"bottom\">\n        <use xlink:href=\"#svg-icon-play-dialog\"></use>\n      </svg>\n      <span class=\"btn btn-default btn-xs ns-mate-solve\"\n            data-original-title=\""
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "tooltips:::Solve full assembly", options) : helperMissing.call(depth0, "i18next", "tooltips:::Solve full assembly", options)))
    + "\"\n            data-placement=\"bottom\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Solve", options) : helperMissing.call(depth0, "i18next", "Solve", options)))
    + "</span>\n    </div>\n  </div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/material"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, helper, self=this, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<div class=\"feature-dialog-wrapper\" role=\"dialog\" data-backdrop=\"false\">\n  ";
  stack1 = self.invokePartial(partials.okCancelDialogHeader, 'okCancelDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  <div class=\"ns-dialog-fixed-content material-dialog-content\"></div>\n  <a class=\"os-feature-dialog-context-help-btn\" href=\"/help";
  if (helper = helpers.helpLocale) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.helpLocale); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "/index.htm#cshid=material_library\" target=\"help\"><svg class=\"os-svg-icon\"><use xlink:href=\"#svg-icon-help-button\"></use></svg></a>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/modelsettings"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, helper, options, functionType="function", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing, helperMissing=helpers.helperMissing;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n          <option value="
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.unit)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + " ";
  stack1 = ((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.selected)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1)),blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data}));
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += ">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.unitName)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</option>\n        ";
  return buffer;
  }
function program2(depth0,data) {
  
  
  return " selected=\"selected\"";
  }

function program4(depth0,data) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\n          <option value=";
  if (helper = helpers.decimalPlaces) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.decimalPlaces); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + " ";
  options={hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data}
  if (helper = helpers.selected) { stack1 = helper.call(depth0, options); }
  else { helper = (depth0 && depth0.selected); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }
  if (!helpers.selected) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data}); }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += ">";
  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</option>\n        ";
  return buffer;
  }
function program5(depth0,data) {
  
  
  return " selected=\"selected\" ";
  }

  buffer += "<div class=\"feature-dialog-wrapper\" role=\"dialog\" data-backdrop=\"false\">\n  ";
  stack1 = self.invokePartial(partials.okCancelDialogHeader, 'okCancelDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  <div>\n    <div class=\"ns-feature-parameter ns-select-control\">\n      <label class=\"ns-parameter-label os-block text-label\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Default length unit", options) : helperMissing.call(depth0, "i18next", "Default length unit", options)))
    + "</label>\n      <select class=\"model-length-units-selector selection-list-workspace\">\n        ";
  options={hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data}
  if (helper = helpers.lengthUnits) { stack1 = helper.call(depth0, options); }
  else { helper = (depth0 && depth0.lengthUnits); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }
  if (!helpers.lengthUnits) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data}); }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n      </select>\n    </div>\n    <div class=\"ns-feature-parameter ns-select-control\">\n      <label class=\"ns-parameter-label os-block text-label\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Length display decimals", options) : helperMissing.call(depth0, "i18next", "Length display decimals", options)))
    + "</label>\n      <select class=\"model-length-precision-selector selection-list-workspace\">\n        ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.lengthDisplayPrecisionChoices), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n      </select>\n    </div>\n    <div class=\"ns-feature-parameter ns-select-control\">\n      <label class=\"ns-parameter-label os-block text-label\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Default angle unit", options) : helperMissing.call(depth0, "i18next", "Default angle unit", options)))
    + "</label>\n      <select class=\"model-angle-units-selector selection-list-workspace\">\n        ";
  options={hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data}
  if (helper = helpers.angleUnits) { stack1 = helper.call(depth0, options); }
  else { helper = (depth0 && depth0.angleUnits); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }
  if (!helpers.angleUnits) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data}); }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n      </select>\n    </div>\n    <div class=\"ns-feature-parameter ns-select-control\">\n      <label class=\"ns-parameter-label os-block text-label\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Angle display decimals", options) : helperMissing.call(depth0, "i18next", "Angle display decimals", options)))
    + "</label>\n      <select class=\"model-angle-precision-selector selection-list-workspace\">\n        ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.angleDisplayPrecisionChoices), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n      </select>\n    </div>\n    <div class=\"ns-feature-parameter ns-select-control\">\n      <label class=\"ns-parameter-label os-block text-label\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Default mass unit", options) : helperMissing.call(depth0, "i18next", "Default mass unit", options)))
    + "</label>\n      <select class=\"model-mass-units-selector selection-list-workspace\">\n        ";
  options={hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data}
  if (helper = helpers.massUnits) { stack1 = helper.call(depth0, options); }
  else { helper = (depth0 && depth0.massUnits); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }
  if (!helpers.massUnits) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data}); }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n      </select>\n    </div>\n    <div class=\"ns-feature-parameter ns-select-control\">\n      <label class=\"ns-parameter-label os-block text-label\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Mass display decimals", options) : helperMissing.call(depth0, "i18next", "Mass display decimals", options)))
    + "</label>\n      <select class=\"model-mass-precision-selector selection-list-workspace\">\n        ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.massDisplayPrecisionChoices), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n      </select>\n    </div>\n    <div class=\"help-btn-container\">\n      <a class=\"modelsettings-context-help-btn\" href=\"/help";
  if (helper = helpers.helpLocale) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.helpLocale); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "/index.htm#cshid=setdefaultunits\"\n         target=\"help\">\n        <svg class=\"os-svg-icon\">\n          <use xlink:href=\"#svg-icon-help-button\"></use>\n        </svg>\n      </a>\n    </div>\n  </div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/movetomv"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, helper, options, functionType="function", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;

function program1(depth0,data) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\n       <option value=";
  if (helper = helpers.elementId) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.elementId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + " ";
  options={hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data}
  if (helper = helpers.selected) { stack1 = helper.call(depth0, options); }
  else { helper = (depth0 && depth0.selected); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }
  if (!helpers.selected) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data}); }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += ">";
  if (helper = helpers.elementId) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.elementId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</option>\n     ";
  return buffer;
  }
function program2(depth0,data) {
  
  
  return " selected=\"selected\"";
  }

  buffer += "<div class=\"feature-dialog-main ns-dialog-frame\">\n  ";
  stack1 = self.invokePartial(partials.okCancelDialogHeader, 'okCancelDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  <div class=\"ns-dialog-fixed-content\">\n    <h5>Element</h5>\n    <select class=\"element-id-selector selection-list-workspace\">\n     ";
  options={hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data}
  if (helper = helpers.elementList) { stack1 = helper.call(depth0, options); }
  else { helper = (depth0 && depth0.elementList); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }
  if (!helpers.elementList) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data}); }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    </select>\n    <h5>Microversion</h5>\n    <input type=\"text\" class=\"microversion os-microversion-textbox\" value=\"";
  if (helper = helpers.microversion) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.microversion); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\"/>\n  </div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/nameditemsdialog"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

function program1(depth0,data) {
  
  
  return " display: none ";
  }

function program3(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n              <option value=\"\" disabled selected>";
  if (helper = helpers.selectorPrompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.selectorPrompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</option>\n            ";
  return buffer;
  }

function program5(depth0,data,depth1) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\n              ";
  stack1 = (helper = helpers.equals || (depth1 && depth1.equals),options={hash:{},data:data},helper ? helper.call(depth0, (depth1 && depth1.currentViewMatchViewDataName), (depth0 && depth0.name), options) : helperMissing.call(depth0, "equals", (depth1 && depth1.currentViewMatchViewDataName), (depth0 && depth0.name), options));
  stack1 = helpers['if'].call(depth0, stack1, {hash:{},inverse:self.program(9, program9, data),fn:self.program(6, program6, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n            ";
  return buffer;
  }
function program6(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n                <option class=\"nameditems-view\" selected ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.nodeId), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += ">";
  if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</option>\n              ";
  return buffer;
  }
function program7(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += " value=\"";
  if (helper = helpers.nodeId) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.nodeId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" ";
  return buffer;
  }

function program9(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n                <option class=\"nameditems-view\" ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.nodeId), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += ">";
  if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</option>\n              ";
  return buffer;
  }

function program11(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n          <button class=\"button-update-item btn btn-sm btn-default add-or-remove-button\" style=\"";
  stack1 = helpers.unless.call(depth0, (depth0 && depth0.canEdit), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\"\n             data-original-title=\"";
  if (helper = helpers.updateTooltip) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.updateTooltip); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" data-placement=\"right\" ";
  stack1 = helpers.unless.call(depth0, (depth0 && depth0.hasMatchingView), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += ">\n            <svg class=\"add-button os-svg-icon\">\n              <use xlink:href=\"#svg-icon-refresh-button\"></use>\n            </svg>\n          </button>\n          ";
  return buffer;
  }
function program12(depth0,data) {
  
  
  return " disabled=\"true\" ";
  }

  buffer += "<div class=\"dialog feature-dialog-wrapper nameditems-dialog-wrapper\" role=\"dialog\" data-backdrop=\"false\">\n  ";
  stack1 = self.invokePartial(partials.closeDialogHeader, 'closeDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  <div class=\"ns-dialog-fixed-content\">\n    <div id=\"nameditems-container\" class=\"ns-feature-length\">\n      <div class=\"nameditems-container ns-param-wrapper\">\n        <div class =\"nameditems-input-container ns-feature-parameter ns-string-control\" style=\"";
  stack1 = helpers.unless.call(depth0, (depth0 && depth0.canEdit), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\">\n          <input id=\"nameditems-input\" class=\"nameditems-input name-text ns-parameter-text\" type=\"text\" placeholder=\"";
  if (helper = helpers.inputPlaceholder) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.inputPlaceholder); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\"/>\n            <button class=\"button-add-item btn  btn-sm btn-default add-or-remove-button\"\n              data-original-title=\"";
  if (helper = helpers.addTooltip) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.addTooltip); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" data-placement=\"right\" disabled=\"true\">\n              <svg class=\"add-button os-svg-icon\">\n                <use xlink:href=\"#svg-icon-add-button\"></use>\n              </svg>\n            </button>\n        </div>\n      </div>\n      <div class=\"nameditems-container nameditems-picker-container\">\n        <div class=\"nameditems-selector-container ns-feature-parameter ns-select-control\" style=\"";
  stack1 = helpers.unless.call(depth0, ((stack1 = (depth0 && depth0.items)),stack1 == null || stack1 === false ? stack1 : stack1.length), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\">\n          <select class=\"nameditems-selector selection-list-nameditems ns-enum-value\">\n            ";
  stack1 = helpers.unless.call(depth0, (depth0 && depth0.hasMatchingView), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n            ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.items), {hash:{},inverse:self.noop,fn:self.programWithDepth(5, program5, data, depth0),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n\n          </select>\n          ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.allowUpdate), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n          <button class=\"button-remove-item btn btn-sm btn-default add-or-remove-button\" style=\"";
  stack1 = helpers.unless.call(depth0, (depth0 && depth0.canEdit), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\"\n             data-original-title=\"";
  if (helper = helpers.removeTooltip) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.removeTooltip); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" data-placement=\"right\" ";
  stack1 = helpers.unless.call(depth0, (depth0 && depth0.hasMatchingView), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += ">\n            <svg class=\"add-button os-svg-icon\">\n              <use xlink:href=\"#svg-icon-remove-button\"></use>\n            </svg>\n          </button>\n        </div>\n        <div class=\"namedview-dialog-no-view-message ns-feature-parameter ns-select-control\" style=\"";
  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.items)),stack1 == null || stack1 === false ? stack1 : stack1.length), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\">\n          ";
  if (helper = helpers.noViewsCreated) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.noViewsCreated); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\n        </div>\n        <p class=\"text-danger hide-intentionally alert alert-info\">";
  if (helper = helpers.nameError) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.nameError); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</p>\n      </div>\n    <div class=\"os-help-button-row\"></div>\n  </div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/nongeometricitem"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n    ";
  stack1 = self.invokePartial(partials.featureDialogHeader, 'featureDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  ";
  return buffer;
  }

function program3(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n    ";
  stack1 = self.invokePartial(partials.closeDialogHeader, 'closeDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  ";
  return buffer;
  }

  buffer += "<div class=\"feature-dialog-main ns-dialog-frame non-geometric-item-dialog\">\n  ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showCommitCancelButtons), {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  <div class=\"ns-dialog-fixed-content\"></div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/partstudio"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<div class=\"ns-subdialog-content\">\n  <div class=\"ns-dialog-resizable part-studio\"></div>\n</div>\n";
  });

this["newtonTemplates"]["dialogs/printSetup"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, helper, options, self=this, functionType="function", blockHelperMissing=helpers.blockHelperMissing, escapeExpression=this.escapeExpression;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n    ";
  stack1 = self.invokePartial(partials.cancelDialogHeader, 'cancelDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  ";
  return buffer;
  }

function program3(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n    ";
  stack1 = self.invokePartial(partials.okCancelDialogHeader, 'okCancelDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  ";
  return buffer;
  }

  buffer += "<div class=\"feature-dialog-wrapper print-dialog-wrapper\" role=\"dialog\" data-backdrop=\"false\">\n  ";
  options={hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data}
  if (helper = helpers.expandedPrintOptionsEnabled) { stack1 = helper.call(depth0, options); }
  else { helper = (depth0 && depth0.expandedPrintOptionsEnabled); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }
  if (!helpers.expandedPrintOptionsEnabled) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data}); }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  ";
  options={hash:{},inverse:self.program(3, program3, data),fn:self.noop,data:data}
  if (helper = helpers.expandedPrintOptionsEnabled) { stack1 = helper.call(depth0, options); }
  else { helper = (depth0 && depth0.expandedPrintOptionsEnabled); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }
  if (!helpers.expandedPrintOptionsEnabled) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.program(3, program3, data),fn:self.noop,data:data}); }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  <div class=\"ns-dialog-fixed-content print-dialog-content\"></div>\n  <a class=\"os-feature-dialog-context-help-btn\" href=\"/help";
  if (helper = helpers.helpLocale) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.helpLocale); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "/index.htm#cshid=print\" target=\"help\"><svg class=\"os-svg-icon\"><use xlink:href=\"#svg-icon-help-button\"></use></svg></a>\n</div>\n\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/sectionview"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, self=this;


  buffer += "<div id=\"sectionview-dialog\" class=\"feature-dialog ns-dialog-frame\" oncontextmenu=\"return false;\">\n  ";
  stack1 = self.invokePartial(partials.okCancelDialogHeader, 'okCancelDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    <div class=\"ns-dialog-fixed-content\">\n        <ul class=\"ns-parameter-list\"/>\n    </div>\n  <div class=\"os-help-button-row\"></div>\n  <div class=\"clearfix\"></div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/singleCollaborator"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<div class=\"ns-client-initial\">\n  <img class=\"profile-image\" src=\"";
  if (helper = helpers.userImage) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.userImage); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" ng-style=\"";
  if (helper = helpers.borderStyle) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.borderStyle); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\"/>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/sketchfeature"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, helper, options, self=this, functionType="function", escapeExpression=this.escapeExpression, blockHelperMissing=helpers.blockHelperMissing, helperMissing=helpers.helperMissing;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n    ";
  stack1 = self.invokePartial(partials.featureDialogHeader, 'featureDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  ";
  return buffer;
  }

function program3(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n    ";
  stack1 = self.invokePartial(partials.closeDialogHeader, 'closeDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  ";
  return buffer;
  }

function program5(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n        <li><span>";
  if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</span> ";
  if (helper = helpers.control) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.control); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "</li>\n      ";
  return buffer;
  }

  buffer += "<div class=\"feature-dialog-main ns-dialog-frame\">\n  ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showCommitCancelButtons), {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  <div class=\"ns-dialog-fixed-content\">\n    <ul class=\"ns-parameter-list\">\n      ";
  options={hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data}
  if (helper = helpers.parameters) { stack1 = helper.call(depth0, options); }
  else { helper = (depth0 && depth0.parameters); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }
  if (!helpers.parameters) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data}); }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    </ul>\n  </div>\n\n  <div class=\"ns-param-wrapper\">\n    <div class=\"ns-feature-parameter ns-boolean-value ns-constraints-control\" data-original-title=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.parameterName)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" data-placement=\"right\">\n      <input type=\"checkbox\" class=\"ns-parameter-checkbox has-mask\" id=\"show-constraints-checkbox\">\n      <label for=\"show-constraints-checkbox\" id=\"show-constraints\" class=\"os-checkbox\"></label>\n      <label for=\"show-constraints-checkbox\" class=\"ns-parameter-label text-label\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Show constraints", options) : helperMissing.call(depth0, "i18next", "Show constraints", options)))
    + "</label>\n    </div>\n  </div>\n\n  <div class=\"ns-param-wrapper\">\n    <div class=\"ns-feature-parameter ns-boolean-value ns-constraints-control\" data-original-title=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.parameterName)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" data-placement=\"right\">\n      <input type=\"checkbox\" class=\"ns-parameter-checkbox has-mask\" id=\"show-overdefined-constraints-checkbox\" checked>\n      <label for=\"show-overdefined-constraints-checkbox\" id=\"show-overdefined-constraints\" class=\"os-checkbox\"></label>\n      <label for=\"show-overdefined-constraints-checkbox\" class=\"ns-parameter-label text-label\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Show overdefined", options) : helperMissing.call(depth0, "i18next", "Show overdefined", options)))
    + "</label>\n    </div>\n  </div>\n\n  <div class=\"ns-preview-control\">\n    <div class=\"ns-preview-sketch-buttons btn-group\">\n      <span class=\"btn btn-xs btn-default ns-preview-control-final\" data-original-title=\""
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "tooltips:::Preview of all model features up to the rollback bar", options) : helperMissing.call(depth0, "i18next", "tooltips:::Preview of all model features up to the rollback bar", options)))
    + "\" data-placement=\"bottom\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Final", options) : helperMissing.call(depth0, "i18next", "Final", options)))
    + "</span>\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/tabReference"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, self=this;


  buffer += "<div class=\"feature-dialog-wrapper\" role=\"dialog\" data-backdrop=\"false\">\n  ";
  stack1 = self.invokePartial(partials.closeDialogHeader, 'closeDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  <div class=\"ns-dialog-fixed-content tab-reference-content\"></div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/tagdebug"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, self=this;


  stack1 = self.invokePartial(partials.cancelDialogHeader, 'cancelDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n<div class=\"ns-dialog-fixed-content\">\n  <ul class=\"ns-parameter-list\">\n    <li class=\"ns-param-wrapper\">\n      <div class=\"ns-feature-parameter\">\n        <span id=\"tagdialogencodedid\"></span>\n      </div>\n    </li>\n    <li class=\"ns-param-wrapper\">\n      <div class=\"ns-feature-parameter\">\n        <input id=\"tagdialogdecodedid\" type=\"text\" value=\"\" class=\"ns-number-text\"/>\n      </div>\n    </li>\n    <li class=\"ns-param-wrapper\"></li>\n  </ul>\n\n  <div class=\"ns-selection-details-section\">\n    <div class=\"ns-selection-details-header\">Selection details</div>\n    <div class=\"ns-selection-details\"></div>\n  </div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["dialogs/twoCollaborators"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<div class=\"ns-client-initial\">\n  <div class=\"ns-client-half\"></div>\n  <div class=\"ns-client-half\"></div>\n</div>\n";
  });

this["newtonTemplates"]["dialogs/viewrestore"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, self=this;


  stack1 = self.invokePartial(partials.cancelDialogHeader, 'cancelDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n<div class=\"ns-dialog-fixed-content\">\n  <ul class=\"ns-parameter-list\">\n    <li class=\"ns-param-wrapper\">\n      <div class=\"ns-feature-parameter\">\n        <input id=\"viewrestorefield\" type=\"text\" value=\"\" class=\"ns-number-text\"/>\n      </div>\n    </li>\n    <li class=\"ns-param-wrapper\"></li>\n  </ul>\n  <button class=\"button-restoreView dropdown-bs btn  btn-default btn-primary\">Restore View</button>\n  <button class=\"button-dumpView dropdown-bs btn btn-primary\">Save View</button>\n</div>";
  return buffer;
  });

this["newtonTemplates"]["dimensionedit"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n        <div>\n        <span class=\"btn btn-sm btn-default dimension-type-toggle\">\n            ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isLimit), {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n        </span>\n        </div>\n    ";
  return buffer;
  }
function program2(depth0,data) {
  
  
  return "\n                <svg class=\"os-svg-icon\"><use xlink:href=\"#svg-icon-limit-dimension\"></use></svg>\n            ";
  }

function program4(depth0,data) {
  
  
  return "\n                <svg class=\"os-svg-icon\"><use xlink:href=\"#svg-icon-sketch-dimension-button\"></use></svg>\n            ";
  }

  buffer += "<div class=\"os-row\">\n    ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.canChangeType), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    <div>\n        <div class=\"dimension-edit-container\">\n        </div>\n        <div class=\"dimension-limit-container\" id=\"minValue-edit-container\">\n        </div>\n        <div class=\"dimension-limit-container\" id=\"maxValue-edit-container\">\n        </div>\n    </div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["documenttabs/addApplicationMenu"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n      <li><a class=\"js-add-application-button\" data-id=\"";
  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\">";
  if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</a></li>\n    ";
  return buffer;
  }

  buffer += "<li class=\"dropdown-submenu\">\n  <a id=\"add-application-button\"><svg class=\"os-svg-icon\"><use xlink:href=\"#svg-icon-blob-element\"></use></svg> ";
  if (helper = helpers.menuValue) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.menuValue); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</a>\n  <ul id=\"add-app-menu\" class=\"dropdown-menu bottom-up application-list\">\n    ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.apps), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  </ul>\n</li>\n\n";
  return buffer;
  });

this["newtonTemplates"]["documenttabs/addApplicationMenuCommands"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n    <li><a class=\"js-add-application-button\" data-id=\"";
  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\">";
  if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</a></li>\n  ";
  return buffer;
  }

  buffer += "<ul id=\"add-app-menu\" class=\"dropdown-menu bottom-up application-list\">\n  ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.apps), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n</ul>\n\n";
  return buffer;
  });

this["newtonTemplates"]["documenttabs/createElementMenu"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;


  buffer += "<li>\n  <a id=\"get-apps-button\" href=\"";
  if (helper = helpers.appStoreUrl) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.appStoreUrl); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" class=\" hide-initially\" data-original-title=\""
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "CAM, Simulation, Rendering and more", options) : helperMissing.call(depth0, "i18next", "CAM, Simulation, Rendering and more", options)))
    + "\" target=\"_blank\" data-placement=\"right\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Go to App Store", options) : helperMissing.call(depth0, "i18next", "Go to App Store", options)))
    + "</a>\n</li>\n<li id=\"optional-create-command-placeholder\" style=\"display: none;\"></li>\n<li>\n  <a id=\"create-application-button\" style=\"display: none;\"><svg class=\"os-svg-icon\"><use xlink:href=\"#svg-icon-blob-element\"></use></svg> "
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Create application…", options) : helperMissing.call(depth0, "i18next", "Create application…", options)))
    + "</a>\n</li>\n<li>\n  <a id=\"create-tutorial-button\" style=\"display: none;\"><svg class=\"os-svg-icon\"><use xlink:href=\"#svg-icon-tutorial-element\"></use></svg> "
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Create tutorial…", options) : helperMissing.call(depth0, "i18next", "Create tutorial…", options)))
    + "</a>\n</li>\n<li>\n    <a id=\"create-material-library-button\"><svg class=\"os-svg-icon\"><use xlink:href=\"#svg-icon-material-library-element\"></use></svg> "
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Create Material Library", options) : helperMissing.call(depth0, "i18next", "Create Material Library", options)))
    + "</a>\n</li>\n<li>\n  <a id=\"create-feature-studio-button\"><svg class=\"os-svg-icon\"><use xlink:href=\"#svg-icon-feature-studio-element\"></use></svg> "
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Create Feature Studio", options) : helperMissing.call(depth0, "i18next", "Create Feature Studio", options)))
    + "</a>\n</li>\n<li class=\"os-add-tab-menu-divider divider\"></li>\n<li>\n  <a id=\"create-part-studio-button\"><svg class=\"os-svg-icon\"><use xlink:href=\"#svg-icon-partstudio\"></use></svg> "
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Create Part Studio", options) : helperMissing.call(depth0, "i18next", "Create Part Studio", options)))
    + "</a>\n</li>\n<li>\n  <a id=\"create-assembly-button\"><svg class=\"os-svg-icon\"><use xlink:href=\"#svg-icon-assembly\"></use></svg> "
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Create Assembly", options) : helperMissing.call(depth0, "i18next", "Create Assembly", options)))
    + "</a>\n</li>\n<li>\n  <a id=\"create-drawing-button\"><svg class=\"os-svg-icon\"><use xlink:href=\"#svg-icon-drawing\"></use></svg> "
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Create Drawing…", options) : helperMissing.call(depth0, "i18next", "Create Drawing…", options)))
    + "</a>\n</li>\n<li>\n  <a id=\"create-group-button\"><svg class=\"os-svg-icon\"><use xlink:href=\"#svg-icon-folder\"></use></svg> "
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Create folder", options) : helperMissing.call(depth0, "i18next", "Create folder", options)))
    + "</a>\n<li>\n  <a id=\"create-table-button\" style=\"display: none;\"><svg class=\"os-svg-icon\"><use xlink:href=\"#svg-icon-drawing\"></use></svg> "
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Create table", options) : helperMissing.call(depth0, "i18next", "Create table", options)))
    + "</a>\n</li>\n<li>\n  <a id=\"upload-button\"><svg class=\"os-svg-icon\"><use xlink:href=\"#svg-icon-document-upload\"></use></svg> "
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Import…", options) : helperMissing.call(depth0, "i18next", "Import…", options)))
    + "</a>\n</li>\n<li>\n  <a id=\"paste-element-button\" style=\"display: none;\"><svg class=\"os-svg-icon\"><use xlink:href=\"#svg-icon-paste-command\"></use></svg> "
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Paste tab", options) : helperMissing.call(depth0, "i18next", "Paste tab", options)))
    + "</a>\n</li>\n";
  return buffer;
  });

this["newtonTemplates"]["documenttabs/measurementarea"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, functionType="function", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

function program1(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n  <div>\n    <svg class=\"os-svg-icon\">\n      <use xlink:href=";
  if (helper = helpers.entityTypeIcon) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.entityTypeIcon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "></use>\n    </svg>\n  </div>\n";
  return buffer;
  }

function program3(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n        <td class=\"primary-measurement measurement-name\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.name)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</td>\n        <td id=\"primary-measurement-value\" class=\"primary-measurement measurement-value\"><span data-value=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.value)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" data-numericvalue=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.numericValue)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" data-original-title=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.numericValue)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.value)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</span></td>\n      ";
  return buffer;
  }

function program5(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n        <td class=\"primary-measurement measurement-units\">\n          "
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.unitsAbbrev)),stack1 == null || stack1 === false ? stack1 : stack1.unit)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));
  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.unitsAbbrev)),stack1 == null || stack1 === false ? stack1 : stack1.hasPower), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n        </td>\n      ";
  return buffer;
  }
function program6(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "<sup>"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.unitsAbbrev)),stack1 == null || stack1 === false ? stack1 : stack1.power)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</sup>";
  return buffer;
  }

function program8(depth0,data) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\n    <button class=\"dropdown-toggle document-tabs-button -left\" data-toggle=\"os-dropdown\" data-original-title=\""
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "tooltips:::Show measure details", options) : helperMissing.call(depth0, "i18next", "tooltips:::Show measure details", options)))
    + "\" data-placement=\"top\">\n      <svg class=\"os-svg-icon\"><use xlink:href=\"#svg-icon-arrow-up\" alt=\""
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "tooltips:::Show measure details", options) : helperMissing.call(depth0, "i18next", "tooltips:::Show measure details", options)))
    + "\"></use></svg>\n    </button>\n    <table id=\"secondary-measurements\" class=\"dropdown-menu bottom-up\">\n      ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.secondaryMeasurements), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    </table>\n  ";
  return buffer;
  }
function program9(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n        <tr data-id=\""
    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" class=\"secondary-measurement\">\n          ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.measurements), {hash:{},inverse:self.noop,fn:self.program(10, program10, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n          ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.unitsAbbrev), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n        </tr>\n      ";
  return buffer;
  }
function program10(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n            <td class=\"measurement-name\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.name)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</td>\n            <td class=\"measurement-value\"><span data-value=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.value)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" data-numericvalue=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.numericValue)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" data-original-title=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.numericValue)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.value)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</span></td>\n          ";
  return buffer;
  }

function program12(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n            <td class=\"measurement-units\">\n              "
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.unitsAbbrev)),stack1 == null || stack1 === false ? stack1 : stack1.unit)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));
  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.unitsAbbrev)),stack1 == null || stack1 === false ? stack1 : stack1.hasPower), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n            </td>\n          ";
  return buffer;
  }

  buffer += "<div class=\"mass-properties btn-group\">\n  <button class=\"btn document-tabs-button  mass-properties\" data-original-title=\""
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "tooltips:::Display mass properties", options) : helperMissing.call(depth0, "i18next", "tooltips:::Display mass properties", options)))
    + "\" data-placement=\"left\">\n    <svg class=\"os-svg-icon\" alt=\""
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "tooltips:::Display mass properties", options) : helperMissing.call(depth0, "i18next", "tooltips:::Display mass properties", options)))
    + "\"><use xlink:href=\"#svg-icon-mass-properties\"></use></svg>\n  </button>\n</div>\n";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.entityTypeIcon), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    <table id=\"primary-measurements\">\n      <tr class =\"primary-measurement-row\">\n      ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.primaryMeasurements), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n      ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.unitsAbbrev), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n      </tr>\n    </table>\n<div class=\"os-dropdown\">\n  ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showMeasureDetails), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["elements/appAccessDenied"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;


  buffer += "<div class=\"os-app-access-denied text-center\">\n  <h1>\n    ";
  if (helper = helpers.applicationName) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.applicationName); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\n  </h1>\n  <h4>\n    "
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "This tab cannot be opened. It uses an application you do not have access to.", options) : helperMissing.call(depth0, "i18next", "This tab cannot be opened. It uses an application you do not have access to.", options)))
    + "\n  </h4>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["elements/foreigndataelementDefault"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n    <p class=\"blob-text-under-icon\">\n      <label>"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.elementInfoText)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</label>\n    </p>\n    ";
  return buffer;
  }

function program3(depth0,data) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\n    <p class=\"blob-text-under-icon\">\n      <label>"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "File size: ", options) : helperMissing.call(depth0, "i18next", "File size: ", options)))
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.fileSize)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</label>\n    </p>\n    ";
  return buffer;
  }

function program5(depth0,data) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\n    <p class=\"blob-text-under-icon\">\n      <label>"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Uploaded ", options) : helperMissing.call(depth0, "i18next", "Uploaded ", options)))
    + " "
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.uploadedAt)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</label>\n    </p>\n    ";
  return buffer;
  }

function program7(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n      <button class=\"btn blob-top-bar-right-item add-space-right\" id=\"updateBlobButton\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Update…", options) : helperMissing.call(depth0, "i18next", "Update…", options)))
    + "</button>\n      ";
  return buffer;
  }

function program9(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n      <button class=\"btn blob-top-bar-right-item add-space-left\" id=\"downloadBlobButton\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Download", options) : helperMissing.call(depth0, "i18next", "Download", options)))
    + "</button>\n      ";
  return buffer;
  }

  buffer += "<div class=\"foreign-data-default\">\n  <div class=\"blob-icon-or-button\">\n    <img class=\"blob-large-icon\" src="
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.imageSrc)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + " alt="
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.imageAlt)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + ">\n    <p class=\"blob-text-under-icon\">\n      <label class=\"strong\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.filename)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</label>\n    </p>\n    ";
  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.elementInfoText), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    ";
  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.fileSize), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    ";
  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.uploadedAt), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    <p class=\"blob-text-under-icon\">\n      ";
  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.canUpdate), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n      ";
  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.canDownload), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    </p>\n  </div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["elements/foreigndataelementIFrame"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  
  return "allowfullscreen mozallowfullscreen webkitallowfullscreen oallowfullscreen msallowfullscreen";
  }

  buffer += "<iframe data-id=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.elementId)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" class=\"foreign-data-container\" src=\"";
  if (helper = helpers.srcUrl) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.srcUrl); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" data=\"";
  if (helper = helpers.srcUrl) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.srcUrl); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" type=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.mimeType)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.allowFullscreen), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " tabindex=\"-1\"></iframe>\n<div class=\"iframe-mask\"></div>\n";
  return buffer;
  });

this["newtonTemplates"]["elements/foreigndataelementImage"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<img data-id=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.elementId)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" class=\"foreign-data-image\" src=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.defaultSrcUrl)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.randomNumberArgumentInSrcUrl)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">\n";
  return buffer;
  });

this["newtonTemplates"]["elements/foreigndataelementMessage"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function";


  buffer += "<div class=\"foreign-data-message\">\n  <div>";
  if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "</div>\n</div>\n\n";
  return buffer;
  });

this["newtonTemplates"]["elements/foreigndataelementObject"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<object data-id=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.elementId)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" class=\"foreign-data-object\" data=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.defaultSrcUrl)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.randomNumberArgumentInSrcUrl)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" type=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.mimeType)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">\n</object>\n\n";
  return buffer;
  });

this["newtonTemplates"]["elements/foreigndataelementTakeConnectionLock"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;


  buffer += "<div class=\"foreign-data-message\">\n  <div>";
  if (helper = helpers.lockerUserName) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.lockerUserName); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "&nbsp;"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "has this tab open and only one user may open this tab at a time.<br/>If you open this tab, you will close it for", options) : helperMissing.call(depth0, "i18next", "has this tab open and only one user may open this tab at a time.<br/>If you open this tab, you will close it for", options)))
    + "&nbsp;";
  if (helper = helpers.lockerUserName) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.lockerUserName); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + ".</div>\n  <button class=\"btn btn-primary take-connection-lock\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Open", options) : helperMissing.call(depth0, "i18next", "Open", options)))
    + "</button>\n</div>\n\n";
  return buffer;
  });

this["newtonTemplates"]["features/previewcontrol"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<div class=\"clearfix\"></div>\n<div class=\"ns-preview-slider-container\">\n  <div class=\"ns-preview-alpha-slider active\" data-original-title=\""
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "tooltips:::Preview before this feature to after this feature", options) : helperMissing.call(depth0, "i18next", "tooltips:::Preview before this feature to after this feature", options)))
    + "\" data-placement=\"bottom\"></div>\n</div>\n<button class=\"btn btn-default btn-xs ns-preview-final-button\" data-original-title=\""
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "tooltips:::Preview with this feature to rollback bar", options) : helperMissing.call(depth0, "i18next", "tooltips:::Preview with this feature to rollback bar", options)))
    + "\" data-placement=\"bottom\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Final", options) : helperMissing.call(depth0, "i18next", "Final", options)))
    + "</button>\n<div class=\"clearfix\"></div>\n";
  return buffer;
  });

this["newtonTemplates"]["featurestudio/collaborativeCursor"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<div class=\"fs-collaborator-cursor\">\n  <div class=\"fs-collaborator-cursor-line\"\n       style=\"border-color:";
  if (helper = helpers.color) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.color); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + ";\">\n  </div>\n  <div class=\"fs-collaborator-square-cursor-top\"\n       style=\"background-color: ";
  if (helper = helpers.color) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.color); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + ";\">\n    <div class=\"fs-collaborator-cursor-nameplate\"\n         style=\"background-color: ";
  if (helper = helpers.color) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.color); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + ";\">\n      ";
  if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\n    </div>\n  </div>\n</div>";
  return buffer;
  });

this["newtonTemplates"]["featurestudio/importLabel"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<div class=\"fs-import-label\">\n  <div class=\"fs-import-label-badge\">\n    ";
  if (helper = helpers.userVisibleString) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.userVisibleString); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\n  </div>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["fsDoc/autocompleteDescription"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function";


  buffer += "<div>\n    "
    + escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},data:data},helper ? helper.call(depth0, (depth0 && depth0.description), options) : helperMissing.call(depth0, "render", (depth0 && depth0.description), options)))
    + "\n</div>\n";
  if (helper = helpers.getItemizedContent) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.getItemizedContent); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\n\n";
  return buffer;
  });

this["newtonTemplates"]["fsDoc/autocompletePreviewFlyout"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<div class=\"fs-doc-body autocomplete-menu-expansion\">";
  if (helper = helpers.content) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.content); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</div>";
  return buffer;
  });

this["newtonTemplates"]["fsDoc/codeBlock"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<pre>";
  if (helper = helpers.code) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.code); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</pre>\n";
  return buffer;
  });

this["newtonTemplates"]["fsDoc/description"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data,depth1) {
  
  var helper, options;
  return escapeExpression((helper = helpers.renderListItemWithContext || (depth0 && depth0.renderListItemWithContext),options={hash:{},data:data},helper ? helper.call(depth0, depth0, (depth1 && depth1.descriptionNodes), (data == null || data === false ? data : data.index), options) : helperMissing.call(depth0, "renderListItemWithContext", depth0, (depth1 && depth1.descriptionNodes), (data == null || data === false ? data : data.index), options)));
  }

  stack1 = helpers.each.call(depth0, (depth0 && depth0.descriptionNodes), {hash:{},inverse:self.noop,fn:self.programWithDepth(1, program1, data, depth0),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  return buffer;
  });

this["newtonTemplates"]["fsDoc/enumValueInfo"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n  <p class=\"fs-subsection-label fs-parameter-info-label\">VALUES</p>\n    <div class=\"fs-subsection\">\n    ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.enumValues), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  </div>\n";
  return buffer;
  }
function program2(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n      <div class=\"fs-parameter\">\n        ";
  if (helper = helpers.render) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.render); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\n      </div>\n    ";
  return buffer;
  }

  stack1 = helpers['if'].call(depth0, (depth0 && depth0.enumValues), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  return buffer;
  });

this["newtonTemplates"]["fsDoc/enumValueShortDescription"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "<div>";
  if (helper = helpers.render) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.render); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</div>";
  return buffer;
  }

  stack1 = helpers['with'].call(depth0, (depth0 && depth0.description), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer;
  });

this["newtonTemplates"]["fsDoc/functionParameters"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n  <p class=\"fs-subsection-label fs-parameter-info-label\">PARAMETER INFO</p>\n    <div class=\"fs-subsection\">\n    ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.parametersToDisplay), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  </div>\n";
  return buffer;
  }
function program2(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n      <div class=\"fs-parameter\">\n        ";
  if (helper = helpers.render) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.render); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\n      </div>\n    ";
  return buffer;
  }

function program4(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n  <p class=\"fs-subsection-label fs-parameter-info-label\">RETURN INFO</p>\n    <div class=\"fs-subsection\">\n    <div class=\"fs-parameter\">\n      ";
  if (helper = helpers.render) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.render); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\n    </div>\n  </div>\n";
  return buffer;
  }

function program6(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n  <p class=\"fs-subsection-label fs-parameter-info-label\">ERROR INFO</p>\n    <div class=\"fs-subsection\">\n    ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.throwsToDisplay), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  </div>\n";
  return buffer;
  }

  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.parametersToDisplay)),stack1 == null || stack1 === false ? stack1 : stack1.length), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  stack1 = helpers['with'].call(depth0, (depth0 && depth0.returnToDisplay), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.throwsToDisplay), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  return buffer;
  });

this["newtonTemplates"]["fsDoc/functionSignatureSuffix"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n  \n  ";
  stack1 = helpers['if'].call(depth0, ((stack1 = ((stack1 = (depth0 && depth0.returnDoc)),stack1 == null || stack1 === false ? stack1 : stack1.type)),stack1 == null || stack1 === false ? stack1 : stack1.symbolName), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  return buffer;
  }
function program2(depth0,data) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\n    <span class=\"fs-function-return\"> returns&nbsp;"
    + escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.returnDoc)),stack1 == null || stack1 === false ? stack1 : stack1.type), options) : helperMissing.call(depth0, "render", ((stack1 = (depth0 && depth0.returnDoc)),stack1 == null || stack1 === false ? stack1 : stack1.type), options)))
    + "</span>\n  ";
  return buffer;
  }

  stack1 = helpers['if'].call(depth0, (depth0 && depth0.returnDoc), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  return buffer;
  });

this["newtonTemplates"]["fsDoc/genericSignature"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var stack1, helper;
  if (helper = helpers.render) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.render); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  return escapeExpression(stack1);
  }

  buffer += "<span class=\"fs-symbol-name\">";
  stack1 = helpers['with'].call(depth0, ((stack1 = (depth0 && depth0.node)),stack1 == null || stack1 === false ? stack1 : stack1.name), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "</span>\n<span class=\"fs-symbol-descriptor\">";
  if (helper = helpers.symbolType) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.symbolType); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</span>\n";
  return buffer;
  });

this["newtonTemplates"]["fsDoc/inlineCode"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<code>";
  if (helper = helpers.codeText) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.codeText); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</code>";
  return buffer;
  });

this["newtonTemplates"]["fsDoc/inlineExample"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this, functionType="function";

function program1(depth0,data,depth1) {
  
  var buffer = "", stack1;
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isForDisplay), {hash:{},inverse:self.noop,fn:self.programWithDepth(2, program2, data, depth1),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer;
  }
function program2(depth0,data,depth2) {
  
  var buffer = "", stack1, helper, options;
  buffer += "<div class=\"fs-example\">\n      ";
  stack1 = (helper = helpers.ifIsExample || (depth2 && depth2.ifIsExample),options={hash:{},inverse:self.programWithDepth(5, program5, data, depth2),fn:self.program(3, program3, data),data:data},helper ? helper.call(depth0, (depth2 && depth2.previous), options) : helperMissing.call(depth0, "ifIsExample", (depth2 && depth2.previous), options));
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "<div class=\"fs-example-code\">"
    + escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},data:data},helper ? helper.call(depth0, (depth0 && depth0.exampleCode), options) : helperMissing.call(depth0, "render", (depth0 && depth0.exampleCode), options)))
    + "</div>\n      ";
  stack1 = helpers['with'].call(depth0, (depth0 && depth0.description), {hash:{},inverse:self.noop,fn:self.program(10, program10, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    </div>";
  return buffer;
  }
function program3(depth0,data) {
  
  var buffer = "";
  buffer += "\n        \n      ";
  return buffer;
  }

function program5(depth0,data,depth3) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\n        <p class=\"fs-example-label\">";
  stack1 = (helper = helpers.ifIsExample || (depth3 && depth3.ifIsExample),options={hash:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),data:data},helper ? helper.call(depth0, (depth3 && depth3.next), options) : helperMissing.call(depth0, "ifIsExample", (depth3 && depth3.next), options));
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "</p>";
  return buffer;
  }
function program6(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n          "
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "EXAMPLES", options) : helperMissing.call(depth0, "i18next", "EXAMPLES", options)));
  return buffer;
  }

function program8(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "EXAMPLE", options) : helperMissing.call(depth0, "i18next", "EXAMPLE", options)));
  return buffer;
  }

function program10(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n        ";
  if (helper = helpers.renderInline) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.renderInline); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\n      ";
  return buffer;
  }

  stack1 = helpers['with'].call(depth0, (depth0 && depth0.item), {hash:{},inverse:self.noop,fn:self.programWithDepth(1, program1, data, depth0),data:data});
  if(stack1 || stack1 === 0) { return stack1; }
  else { return ''; }
  });

this["newtonTemplates"]["fsDoc/linkedSymbol"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1, helper;
  if (helper = helpers.symbolName) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.symbolName); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1);
  return buffer;
  }

function program3(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "<a target=\"_blank\" href=\"";
  stack1 = helpers['with'].call(depth0, (depth0 && depth0.referenceLocation), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\">";
  if (helper = helpers.symbolName) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.symbolName); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</a>";
  return buffer;
  }
function program4(depth0,data) {
  
  var stack1, helper;
  if (helper = helpers.getLocation) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.getLocation); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  return escapeExpression(stack1);
  }

  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.referenceLocation)),stack1 == null || stack1 === false ? stack1 : stack1.isInvalid), {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { return stack1; }
  else { return ''; }
  });

this["newtonTemplates"]["fsDoc/paragraph"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<p>";
  if (helper = helpers.renderInline) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.renderInline); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</p>\n";
  return buffer;
  });

this["newtonTemplates"]["fsDoc/paragraphExample"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\n  <p class=\"fs-example-label\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "EXAMPLE", options) : helperMissing.call(depth0, "i18next", "EXAMPLE", options)))
    + "</p>\n  <blockquote class=\"fs-example\">"
    + escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},data:data},helper ? helper.call(depth0, (depth0 && depth0.exampleCode), options) : helperMissing.call(depth0, "render", (depth0 && depth0.exampleCode), options)));
  stack1 = helpers['with'].call(depth0, (depth0 && depth0.description), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n  </blockquote>\n";
  return buffer;
  }
function program2(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n      ";
  if (helper = helpers.render) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.render); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\n    ";
  return buffer;
  }

  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isForDisplay), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  return buffer;
  });

this["newtonTemplates"]["fsDoc/paragraphInline"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1, helper;
  if (helper = helpers.render) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.render); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1);
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.hasSpaceAfter), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer;
  }
function program2(depth0,data) {
  
  
  return " ";
  }

  stack1 = helpers.each.call(depth0, (depth0 && depth0.words), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer;
  });

this["newtonTemplates"]["fsDoc/parameterDocumentationBase"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, functionType="function", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

function program1(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n  <div class=\"fs-parameter-name\">";
  if (helper = helpers.getDisplayName) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.getDisplayName); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</div>";
  return buffer;
  }

function program3(depth0,data) {
  
  var buffer = "", stack1, helper, options;
  buffer += "<div class=\"fs-parameter-type\">";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isFunctionInput), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "&nbsp;"
    + escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},data:data},helper ? helper.call(depth0, (depth0 && depth0.type), options) : helperMissing.call(depth0, "render", (depth0 && depth0.type), options)))
    + "</div>";
  return buffer;
  }
function program4(depth0,data) {
  
  
  return " is";
  }

function program6(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "<p class=\"optional-status\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "optional", options) : helperMissing.call(depth0, "i18next", "optional", options)))
    + "</p>";
  return buffer;
  }

function program8(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "<p class=\"optional-status\">required if ";
  stack1 = helpers['with'].call(depth0, (depth0 && depth0.optionalCondition), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "</p>";
  return buffer;
  }
function program9(depth0,data) {
  
  var stack1, helper;
  if (helper = helpers.renderInline) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.renderInline); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  return escapeExpression(stack1);
  }

function program11(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n    <ol class=\"fs-parameter-fields\">\n      ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.fields), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    </ol>\n  ";
  return buffer;
  }
function program12(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "<li>";
  if (helper = helpers.render) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.render); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</li>";
  return buffer;
  }

  stack1 = helpers['if'].call(depth0, (depth0 && depth0.getDisplayName), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.type), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isOptional), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isConditionallyRequired), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n<div class=\"fs-parameter-info\">\n  <div class=\"fs-parameter-description\">\n    "
    + escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},data:data},helper ? helper.call(depth0, (depth0 && depth0.description), options) : helperMissing.call(depth0, "render", (depth0 && depth0.description), options)))
    + "\n  </div>\n  ";
  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.fields)),stack1 == null || stack1 === false ? stack1 : stack1.length), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["fsDoc/predicateSignatureSuffix"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<span class=\"fs-symbol-descriptor\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "predicate", options) : helperMissing.call(depth0, "i18next", "predicate", options)))
    + "</span>\n";
  return buffer;
  });

this["newtonTemplates"]["fsDoc/procedureSignature"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function", self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1, helper;
  if (helper = helpers.parameterName) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.parameterName); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1);
  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.type)),stack1 == null || stack1 === false ? stack1 : stack1.symbolName), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  stack1 = helpers.unless.call(depth0, (data == null || data === false ? data : data.last), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer;
  }
function program2(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "&nbsp;is&nbsp;"
    + escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},data:data},helper ? helper.call(depth0, (depth0 && depth0.type), options) : helperMissing.call(depth0, "render", (depth0 && depth0.type), options)));
  return buffer;
  }

function program4(depth0,data) {
  
  
  return ", ";
  }

  buffer += "<span class=\"fs-symbol-name\">"
    + escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},data:data},helper ? helper.call(depth0, (depth0 && depth0.name), options) : helperMissing.call(depth0, "render", (depth0 && depth0.name), options)))
    + "</span>\n\n<span class=\"fs-function-arguments\">\n  (";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.paramDocs), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += ")\n</span>\n";
  if (helper = helpers.getSignatureSuffix) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.getSignatureSuffix); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\n";
  return buffer;
  });

this["newtonTemplates"]["fsDoc/reference"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "<a target=\"_blank\" href=\"";
  stack1 = helpers['with'].call(depth0, (depth0 && depth0.referenceLocation), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\">";
  return buffer;
  }
function program2(depth0,data) {
  
  var stack1, helper;
  if (helper = helpers.getLocation) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.getLocation); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  return escapeExpression(stack1);
  }

function program4(depth0,data) {
  
  var buffer = "", stack1;
  stack1 = helpers['with'].call(depth0, (depth0 && depth0.visibleText), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer;
  }
function program5(depth0,data) {
  
  var stack1, helper;
  if (helper = helpers.renderInline) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.renderInline); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  return escapeExpression(stack1);
  }

function program7(depth0,data) {
  
  var buffer = "", stack1;
  stack1 = helpers['with'].call(depth0, (depth0 && depth0.referenceLocation), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer;
  }
function program8(depth0,data) {
  
  var stack1, helper;
  if (helper = helpers.renderDefaultVisibleText) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.renderDefaultVisibleText); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  return escapeExpression(stack1);
  }

function program10(depth0,data) {
  
  
  return "</a>";
  }

  stack1 = helpers.unless.call(depth0, ((stack1 = (depth0 && depth0.referenceLocation)),stack1 == null || stack1 === false ? stack1 : stack1.isInvalid), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  stack1 = helpers['if'].call(depth0, ((stack1 = ((stack1 = (depth0 && depth0.visibleText)),stack1 == null || stack1 === false ? stack1 : stack1.words)),stack1 == null || stack1 === false ? stack1 : stack1.length), {hash:{},inverse:self.program(7, program7, data),fn:self.program(4, program4, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  stack1 = helpers.unless.call(depth0, ((stack1 = (depth0 && depth0.referenceLocation)),stack1 == null || stack1 === false ? stack1 : stack1.isInvalid), {hash:{},inverse:self.noop,fn:self.program(10, program10, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer;
  });

this["newtonTemplates"]["fsDoc/seeAlso"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += " ";
  if (helper = helpers.renderInline) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.renderInline); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1);
  return buffer;
  }

  buffer += "<p>"
    + escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},data:data},helper ? helper.call(depth0, (depth0 && depth0.referenceLocation), options) : helperMissing.call(depth0, "render", (depth0 && depth0.referenceLocation), options)));
  stack1 = helpers['with'].call(depth0, (depth0 && depth0.description), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "</p>";
  return buffer;
  });

this["newtonTemplates"]["fsDoc/seeLegacy"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;

function program1(depth0,data) {
  
  var stack1, helper;
  if (helper = helpers.renderInline) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.renderInline); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  return escapeExpression(stack1);
  }

  buffer += "<p>\n  <span class=\"fs-see-also\">See</span> "
    + escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},data:data},helper ? helper.call(depth0, (depth0 && depth0.code), options) : helperMissing.call(depth0, "render", (depth0 && depth0.code), options)))
    + "\n  ";
  stack1 = helpers['with'].call(depth0, (depth0 && depth0.description), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n</p>\n";
  return buffer;
  });

this["newtonTemplates"]["fsDoc/text"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression;


  if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1);
  return buffer;
  });

this["newtonTemplates"]["fsDoc/tooltipDescription"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  stack1 = helpers['with'].call(depth0, ((stack1 = (depth0 && depth0.descriptionNodes)),stack1 == null || stack1 === false ? stack1 : stack1[0]), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer;
  }
function program2(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "<div class=\"fs-snippet-tooltip\">";
  if (helper = helpers.render) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.render); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</div>";
  return buffer;
  }

  stack1 = helpers['with'].call(depth0, (depth0 && depth0.description), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer;
  });

this["newtonTemplates"]["fsDoc/topLevelDoc"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function", self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\n  <p class=\"node-signature";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isUseNotRecommended), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\" id=\"";
  if (helper = helpers.getSnippetId) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.getSnippetId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\">";
  if (helper = helpers.getSignature) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.getSignature); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</p>\n  <div class=\"fs-doc-content\">\n    ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isInternal), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isDeprecated), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    "
    + escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},data:data},helper ? helper.call(depth0, (depth0 && depth0.description), options) : helperMissing.call(depth0, "render", (depth0 && depth0.description), options)))
    + "\n    ";
  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.seeAlsoReferences)),stack1 == null || stack1 === false ? stack1 : stack1.length), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    ";
  if (helper = helpers.getItemizedContent) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.getItemizedContent); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\n  </div>\n";
  return buffer;
  }
function program2(depth0,data) {
  
  
  return " deprecated-signature";
  }

function program4(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n      <p class=\"deprecated-explanation\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "For Onshape internal use.", options) : helperMissing.call(depth0, "i18next", "For Onshape internal use.", options)))
    + "</p>\n    ";
  return buffer;
  }

function program6(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n      <p class=\"deprecated-explanation\">\n        <span class=\"deprecated-label\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Deprecated", options) : helperMissing.call(depth0, "i18next", "Deprecated", options)))
    + "</span>\n        "
    + escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},data:data},helper ? helper.call(depth0, (depth0 && depth0.deprecatedExplanation), options) : helperMissing.call(depth0, "render", (depth0 && depth0.deprecatedExplanation), options)))
    + "\n      </p>\n    ";
  return buffer;
  }

function program8(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n      <p class=\"see-also-header\">See also</p>\n      ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.seeAlsoReferences), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    ";
  return buffer;
  }
function program9(depth0,data) {
  
  var stack1, helper;
  if (helper = helpers.render) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.render); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  return escapeExpression(stack1);
  }

  stack1 = helpers['with'].call(depth0, (depth0 && depth0.doc), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  return buffer;
  });

this["newtonTemplates"]["fsDoc/typeInfo"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function", self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n  ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.shouldDisplay), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  return buffer;
  }
function program2(depth0,data) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\n    <p class=\"fs-subsection-label fs-parameter-info-label\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "TYPE INFO", options) : helperMissing.call(depth0, "i18next", "TYPE INFO", options)))
    + "</p>\n    <div class=\"fs-subsection\">\n      <div class=\"fs-parameter\">\n        ";
  if (helper = helpers.render) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.render); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\n      </div>\n    </div>\n  ";
  return buffer;
  }

  stack1 = helpers['with'].call(depth0, (depth0 && depth0.valueDoc), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  return buffer;
  });

this["newtonTemplates"]["fsDoc/word"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression;


  if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1);
  return buffer;
  });

this["newtonTemplates"]["graphicsDropdown"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<svg class=\"os-svg-icon\" icon=\"view-cube-button\"><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#svg-icon-view-cube-button\"></use></svg>\n<b class=\"caret os-dropdown-caret\"></b>\n<!-- The bounds are used by in-app message to hang messages off the extents of the view cube widget -->\n<div class=\"os-view-cube-bounds\"></div>\n";
  });

this["newtonTemplates"]["incontext"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n    <div class=\"context-mode-caption transient-context os-row\">\n        <div>"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{
    'reference': ((depth0 && depth0.referenceName))
  },data:data},helper ? helper.call(depth0, "__reference__ displayed", options) : helperMissing.call(depth0, "i18next", "__reference__ displayed", options)))
    + "</div>\n";
  return buffer;
  }

function program3(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n    <div class=\"context-mode-caption os-row\">\n        <div>"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{
    'context': ((depth0 && depth0.name)),
    'reference': ((depth0 && depth0.referenceName))
  },data:data},helper ? helper.call(depth0, "__context__ of __reference__", options) : helperMissing.call(depth0, "i18next", "__context__ of __reference__", options)))
    + "</div>\n";
  return buffer;
  }

function program5(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n    <div class=\"btn-group os-no-shrink\">\n      <button class=\"btn btn-default btn-sm small-secondary-btn\" data-action=\"finish\" type=\"button\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Insert and go to Assembly", options) : helperMissing.call(depth0, "i18next", "Insert and go to Assembly", options)))
    + "</button><button type=\"button\" class=\"btn btn-default btn-sm small-secondary-btn dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n        <span class=\"caret\"></span>\n        <span class=\"sr-only\">Toggle Dropdown</span>\n      </button>\n      <ul class=\"dropdown-menu pull-right\">\n        <li><a href=\"#\" data-action=\"finish\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Insert and go to Assembly", options) : helperMissing.call(depth0, "i18next", "Insert and go to Assembly", options)))
    + "</a></li>\n        <li><a href=\"#\" data-action=\"abort\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Go to Assembly", options) : helperMissing.call(depth0, "i18next", "Go to Assembly", options)))
    + "</a></li>\n      </ul>\n    </div>\n";
  return buffer;
  }

function program7(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.linkedDocumentContext), {hash:{},inverse:self.program(10, program10, data),fn:self.program(8, program8, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer;
  }
function program8(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n    <div class=\"btn-group os-no-shrink\">\n      <button class=\"btn btn-default btn-sm small-secondary-btn\" data-action=\"createVersionAndFinish\" type=\"button\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Create version and go to Assembly", options) : helperMissing.call(depth0, "i18next", "Create version and go to Assembly", options)))
    + "</button><button type=\"button\" class=\"btn btn-default btn-sm small-secondary-btn dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n        <span class=\"caret\"></span>\n        <span class=\"sr-only\">Toggle Dropdown</span>\n      </button>\n      <ul class=\"dropdown-menu pull-right\">\n        <li><a href=\"#\" data-action=\"createVersionAndFinish\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Create version and go to Assembly", options) : helperMissing.call(depth0, "i18next", "Create version and go to Assembly", options)))
    + "</a></li>\n        <li><a href=\"#\" data-action=\"abort\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Go to Assembly", options) : helperMissing.call(depth0, "i18next", "Go to Assembly", options)))
    + "</a></li>\n      </ul>\n    </div>\n";
  return buffer;
  }

function program10(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n    <button class=\"btn btn-default btn-sm small-secondary-btn\" type=\"button\" data-action=\"exit-and-return\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Go to assembly", options) : helperMissing.call(depth0, "i18next", "Go to assembly", options)))
    + "</button>\n";
  return buffer;
  }

  stack1 = helpers['if'].call(depth0, (depth0 && depth0.inTransientContext), {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    <div class=\"context-caption-spacer\"></div>\n";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.createMode), {hash:{},inverse:self.program(7, program7, data),fn:self.program(5, program5, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    <button class=\"close\" type=\"button\" data-action=\"dismiss\" data-original-title=\""
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "tooltips:::Exit context", options) : helperMissing.call(depth0, "i18next", "tooltips:::Exit context", options)))
    + "\" data-placement=\"bottom\"><span aria-hidden=\"true\">×</span><span class=\"sr-only\">Close</span></button>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["selection/listentry"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<li class=\"selection-list-entry\" data-id=\"";
  if (helper = helpers.selectionId) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.selectionId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\"><span class=\"selection-name\">";
  if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</span></li>\n";
  return buffer;
  });

this["newtonTemplates"]["selection/selectother"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, self=this;


  stack1 = self.invokePartial(partials.cancelDialogHeader, 'cancelDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n<div class=\"ns-dialog-fixed-content\">\n  <div class=\"selection-list graphical-selection\">\n    <div class=\"selection-list-scroller\">\n      <ul class=\"bti-ul-class pick-list\"></ul>\n    </div>\n  </div>\n</div>\n<div class=\"os-help-button-row\"></div>\n";
  return buffer;
  });

this["newtonTemplates"]["selection/smartselectiondialog"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, self=this;


  stack1 = self.invokePartial(partials.cancelDialogHeader, 'cancelDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n<div class=\"ns-dialog-fixed-content\">\n  <ul class=\"ns-parameter-list smart-selection-view-container\">\n  </ul>\n</div>\n<div class=\"os-help-button-row\"></div>\n";
  return buffer;
  });

this["newtonTemplates"]["selection/smartselectionview"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, functionType="function", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

function program1(depth0,data) {
  
  
  return " display: none; ";
  }

function program3(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n                <option value=\"";
  if (helper = helpers.functionName) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.functionName); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\">";
  if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</option>\n            ";
  return buffer;
  }

  buffer += "<li class=\"ns-param-wrapper\" style=\"";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.hideTab), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\">\n    <div id=\"input-type\" class=\"ns-feature-parameter ns-boolean-enum-control os-dialog-tab-group\">\n      <div id=\"face-tab\" class=\"ns-horizontal-enum-control-text os-dialog-tab selected\" data-value=\"FACES\" tabindex=\"-1\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Faces", options) : helperMissing.call(depth0, "i18next", "Faces", options)))
    + "</div>\n      <div id=\"edge-tab\" class=\"ns-horizontal-enum-control-text os-dialog-tab\" data-value=\"EDGES\" tabindex=\"-1\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Edges", options) : helperMissing.call(depth0, "i18next", "Edges", options)))
    + "</div>\n    </div>\n</li>\n\n<div class=\"ns-param-wrapper face-options\">\n    <div class=\"ns-feature-parameter ns-select-control\">\n        <select class=\"selection-type\">\n            ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.faceSelectionFunctions), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n        </select>\n    </div>\n</div>\n\n<div class=\"ns-param-wrapper edge-options\" style=\"display: none;\">\n    <div class=\"ns-feature-parameter ns-select-control\">\n        <select class=\"selection-type\">\n            ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.edgeSelectionFunctions), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n        </select>\n    </div>\n</div>\n\n\n<li class=\"selection-list-placeholder\"></li>\n\n<div class=\"ns-param-wrapper fillet-options\" style=\"display: none;\">\n    <input type=\"radio\" name=\"compare-type\" value=\"EQUAL\" id=\"compare-type-equal\" checked=\"checked\"/><label for=\"compare-type-equal\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Equal radius", options) : helperMissing.call(depth0, "i18next", "Equal radius", options)))
    + "</label><br />\n    <input type=\"radio\" name=\"compare-type\" value=\"LESS_EQUAL\" id=\"compare-type-less-equal\" /><label for=\"compare-type-less-equal\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Equal or smaller radius", options) : helperMissing.call(depth0, "i18next", "Equal or smaller radius", options)))
    + "</label><br />\n    <input type=\"radio\" name=\"compare-type\" value=\"GREATER_EQUAL\" id=\"compare-type-greater-equal\" /><label for=\"compare-type-greater-equal\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Equal or greater radius", options) : helperMissing.call(depth0, "i18next", "Equal or greater radius", options)))
    + "</label><br />\n</div>\n\n<div class=\"ns-param-wrapper select-patterns-option\" style=\"display: none;\">\n  <div class=\"ns-feature-parameter ns-boolean-value\">\n    <input type=\"checkbox\" class=\"ns-parameter-checkbox has-mask\" id=\"select-patterns-checkbox\" />\n    <label class=\"os-checkbox\" for=\"select-patterns-checkbox\" id=\"select-patterns\"></label>\n    <label class=\"ns-parameter-label\" for=\"select-patterns-checkbox\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Select patterns", options) : helperMissing.call(depth0, "i18next", "Select patterns", options)))
    + "</label>\n  </div>\n</div>\n\n<li class=\"ns-param-wrapper\">\n    <div class=\"smart-selection-result-info\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "No selection to add", options) : helperMissing.call(depth0, "i18next", "No selection to add", options)))
    + "</div>\n</li>\n\n<li class=\"ns-param-wrapper\">\n    <div class=\"smart-selection-buttons\">\n        <span class=\"btn btn-sm btn-default add-selection-button disabled\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Add selection", options) : helperMissing.call(depth0, "i18next", "Add selection", options)))
    + "</span>\n    </div>\n</li>\n";
  return buffer;
  });

this["newtonTemplates"]["sketch/indicatorhelppanel"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n    <div class=\"sketch-indicator-help\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.typeString)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</div>\n";
  return buffer;
  }

function program3(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n    <div class=\"sketch-indicator-status-help\"><strong>"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.errorString)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</strong></div>\n";
  return buffer;
  }

  stack1 = ((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.hasConstraint)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1)),blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data}));
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  stack1 = ((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.hasError)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1)),blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data}));
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  return buffer;
  });

this["newtonTemplates"]["sketch/sketchimagedialog"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  stack1 = self.invokePartial(partials.cancelDialogHeader, 'cancelDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n<div class=\"sketch-image-insert\"></div>\n<div>\n  <span class=\"sketch-image-import-button\">\n    <svg class=\"os-svg-icon\"><use xlink:href=\"#svg-icon-document-upload\"></use></svg>"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Import…", options) : helperMissing.call(depth0, "i18next", "Import…", options)))
    + "\n  </span>\n  <span class=\"os-help-button-row\"></span>\n</div>\n";
  return buffer;
  });

this["newtonTemplates"]["sketch/sketchtextdialog"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  stack1 = self.invokePartial(partials.okCancelDialogHeader, 'okCancelDialogHeader', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n<div class=\"sketch-text-dialog-content\">\n  <div class=\"sketch-text-font-content ns-feature-parameter ns-select-control\">\n    <select class=\"selection-list-workspace sketch-text-font-value\">\n    </select>\n    <div class=\"os-control-container no-border\">\n      <div class=\"os-control-row\">\n        <span class=\"sketch-text-bold-button-span ns-feature-parameter ns-boolean-value\" data-original-title=\""
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "tooltips:::Bold", options) : helperMissing.call(depth0, "i18next", "tooltips:::Bold", options)))
    + "\" data-placement=\"bottom\">\n          <button class=\"os-button os-clear sketch-text-bold-button\">\n            <label class=\"bold-label\">B</label>\n          </button>\n        </span>\n        <span class=\"sketch-text-italic-button-span ns-feature-parameter ns-boolean-value\" data-original-title=\""
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "tooltips:::Italic", options) : helperMissing.call(depth0, "i18next", "tooltips:::Italic", options)))
    + "\" data-placement=\"bottom\">\n          <button class=\"os-button os-clear sketch-text-italic-button\">\n            <label class=\"italic-label\">I</label>\n          </button>\n        </span>\n        <span class=\"sketch-text-mirror-horizontal-button-span ns-feature-parameter ns-boolean-value\" data-original-title=\""
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "tooltips:::Flip horizontal", options) : helperMissing.call(depth0, "i18next", "tooltips:::Flip horizontal", options)))
    + "\" data-placement=\"bottom\">\n          <button class=\"os-button os-clear sketch-text-mirror-horizontal-button\">\n            <svg class=\"os-svg-icon\">\n              <use xlink:href=\"#svg-icon-sketch-flip-horizontal-button\"></use>\n            </svg>\n          </button>\n        </span>\n        <span class=\"sketch-text-mirror-vertical-button-span ns-feature-parameter ns-boolean-value\" data-original-title=\""
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "tooltips:::Flip vertical", options) : helperMissing.call(depth0, "i18next", "tooltips:::Flip vertical", options)))
    + "\" data-placement=\"bottom\">\n          <button class=\"os-button os-clear sketch-text-mirror-vertical-button\">\n            <svg class=\"os-svg-icon\">\n              <use xlink:href=\"#svg-icon-sketch-flip-vertical-button\"></use>\n            </svg>\n          </button>\n        </span>\n      </div>\n    </div>\n  </div>\n  <textarea disabled class=\"sketch-textarea-preview-value\">Default text</textarea>\n  <div class=\"sketch-textarea-container\">\n    <textarea class=\"sketch-textarea-value os-canvas-text-edit\">Default text</textarea>\n    <div class=\"configured-overlay ns-dialog-default-hidden\"></div>\n  </div>\n\n  <div class=\"os-row sketch-text-details\">\n    <span class=\"sketch-text-max-chars-message\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Maximum of 250 characters", options) : helperMissing.call(depth0, "i18next", "Maximum of 250 characters", options)))
    + "</span>\n\n    <!-- Configuration management for text parameter -->\n    <div class=\"dropdown os-pin-right configure-text-button-container\">\n\n      <button class=\"btn btn-default btn-sm unconfigure-text-button ns-dialog-default-hidden\"\n              type=\"button\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Unconfigure text", options) : helperMissing.call(depth0, "i18next", "Unconfigure text", options)))
    + "\n      </button>\n\n      <button class=\"btn btn-default btn-sm configure-text-button ns-dialog-default-hidden\"\n              type=\"button\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Configure text", options) : helperMissing.call(depth0, "i18next", "Configure text", options)))
    + "\n      </button>\n\n      <button class=\"btn btn-default btn-sm dropdown-toggle configure-text-dropdown-button ns-dialog-default-hidden\"\n              data-toggle=\"dropdown\"\n              type=\"button\">"
    + escapeExpression((helper = helpers.i18next || (depth0 && depth0.i18next),options={hash:{},data:data},helper ? helper.call(depth0, "Configure text", options) : helperMissing.call(depth0, "i18next", "Configure text", options)))
    + "<b class=\"caret\"></b>\n      </button>\n      <ul class=\"dropdown-menu configure-text-dropdown-menu ns-dialog-default-hidden\"></ul>\n    </div>\n  </div>\n</div>\n\n";
  return buffer;
  });